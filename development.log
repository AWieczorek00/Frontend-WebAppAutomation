[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "EqWGhBgMot",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/app.module.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "Frontend-BSc-Thesis",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"rootRoutingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "Frontend-BSc-Thesis",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"rootRoutingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "hQfhpHyIpe",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/order-list",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "KXUoQoru2v",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "Frontend-BSc-Thesis",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"rootRoutingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "Frontend-BSc-Thesis",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"rootRoutingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "GNAxZCENg4",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/order-list",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "Frontend-BSc-Thesis",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"rootRoutingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "Frontend-BSc-Thesis",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"rootRoutingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "new-order",
		"entityId": "page"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "GNAxZCENg4",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/order-list",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "new-order",
		"entityId": "page"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "new-order",
		"prefix": "app",
		"suffix": "Page",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/new-order",
		"config": {
			"stylesExtension": "scss",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/new-order/new-order.page.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/new-order/new-order.page.scss",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/new-order/new-order.page.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/new-order/new-order.page-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/new-order/new-order.page.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/new-order/new-order.page-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/new-order/new-order.page-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/new-order/new-order.page-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "new-order",
		"prefix": "app",
		"suffix": "Page",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/new-order",
		"config": {
			"stylesExtension": "scss",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/new-order/new-order.page.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "DvjbJzn9Bo",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "new-order",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "DvjbJzn9Bo",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "new-order",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "new-order",
		"prefix": "lib",
		"suffix": "Component",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order",
		"config": {
			"stylesExtension": "scss",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.scss",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "new-order",
		"prefix": "lib",
		"suffix": "Component",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order",
		"config": {
			"stylesExtension": "scss",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 353
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "51Mg3ByRmf",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 353
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "8kYHrczz-z",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "httpClient",
		"entityId": "service"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "8kYHrczz-z",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "httpClient",
		"entityId": "service"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
		"name": "httpClient",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
		"name": "httpClient",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "C8bJRWaYb6",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "get-all-client",
		"entityId": "dtoPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "C8bJRWaYb6",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "get-all-client",
		"entityId": "dtoPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "get-all-client",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "get-all-client",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all-client.dto-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
		"position": 198
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "rppMWcZzc7",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
		"position": 198
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "rppMWcZzc7",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ActivitiesTemplateDto>"
					},
					{
						"name": "Observable<ActivitiesTemplateDto[]>"
					},
					{
						"name": "Observable<ActivitiesDto>"
					},
					{
						"name": "Observable<ActivitiesDto[]>"
					},
					{
						"name": "Observable<EmployeeDto>"
					},
					{
						"name": "Observable<EmployeeDto[]>"
					},
					{
						"name": "Observable<OrderDto>"
					},
					{
						"name": "Observable<OrderDto[]>"
					},
					{
						"name": "Observable<ClientDto>"
					},
					{
						"name": "Observable<ClientDto[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ActivitiesTemplateDto>"
					},
					{
						"name": "Observable<ActivitiesTemplateDto[]>"
					},
					{
						"name": "Observable<ActivitiesDto>"
					},
					{
						"name": "Observable<ActivitiesDto[]>"
					},
					{
						"name": "Observable<EmployeeDto>"
					},
					{
						"name": "Observable<EmployeeDto[]>"
					},
					{
						"name": "Observable<OrderDto>"
					},
					{
						"name": "Observable<OrderDto[]>"
					},
					{
						"name": "Observable<ClientDto>"
					},
					{
						"name": "Observable<ClientDto[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "getAll",
		"params": {},
		"returnType": "Observable<ClientDto[]>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "rppMWcZzc7",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "getAll",
		"params": {},
		"returnType": "Observable<ClientDto[]>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<ClientDto[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<ClientDto[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "mELVSbHawA",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "load-clients",
		"properties": {},
		"entityId": "command"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "mELVSbHawA",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "load-clients",
		"properties": {},
		"entityId": "command"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "load-clients",
		"suffix": "Command",
		"properties": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "load-clients",
		"suffix": "Command",
		"properties": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/load-clients.command.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "0p-qgtDHIZ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "load-clients",
		"entityId": "commandPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "0p-qgtDHIZ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "load-clients",
		"entityId": "commandPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "load-clients",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "load-clients",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/load-clients.command-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "vMUUVR6PiC",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"position": 208
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "jg3MXqqVeQ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"position": 208
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "jg3MXqqVeQ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<LoadClientsCommand>"
					},
					{
						"name": "Observable<LoadClientsCommand[]>"
					},
					{
						"name": "Observable<LoadOrdersCommand>"
					},
					{
						"name": "Observable<LoadOrdersCommand[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<LoadClientsCommand>"
					},
					{
						"name": "Observable<LoadClientsCommand[]>"
					},
					{
						"name": "Observable<LoadOrdersCommand>"
					},
					{
						"name": "Observable<LoadOrdersCommand[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "loadClient",
		"params": {},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "jg3MXqqVeQ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "loadClient",
		"params": {},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"name": "loadClient",
		"params": {},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"name": "loadClient",
		"params": {},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "JW_qwXgZU4",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "inMemoryClient",
		"entityId": "storage"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "JW_qwXgZU4",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "inMemoryClient",
		"entityId": "storage"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages",
		"name": "inMemoryClient",
		"suffix": "Storage"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-client.storage.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-client.storage.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-client.storage.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-client.storage-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-client.storage-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-client.storage-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-client.storage-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-client.storage.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages",
		"name": "inMemoryClient",
		"suffix": "Storage"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-client.storage.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "r-k2xBVfxZ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee.dto.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "client",
		"properties": {
			"clients": "ClientQuery[]"
		},
		"entityId": "context"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "r-k2xBVfxZ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee.dto.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "client",
		"properties": {
			"clients": "ClientQuery[]"
		},
		"entityId": "context"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client",
		"name": "client",
		"suffix": "Context",
		"properties": {
			"clients": "ClientQuery[]"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client",
		"name": "client",
		"suffix": "Context",
		"properties": {
			"clients": "ClientQuery[]"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Ce2lc68ve4",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "client",
		"entityId": "contextPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Ce2lc68ve4",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "client",
		"entityId": "contextPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client",
		"name": "client",
		"suffix": "ContextPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client",
		"name": "client",
		"suffix": "ContextPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"position": 0
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "VDUGyrHlj8",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"position": 0
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "VDUGyrHlj8",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ClientContext>"
					},
					{
						"name": "Observable<ClientContext[]>"
					},
					{
						"name": "Observable<OrderContext>"
					},
					{
						"name": "Observable<OrderContext[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ClientContext>"
					},
					{
						"name": "Observable<ClientContext[]>"
					},
					{
						"name": "Observable<OrderContext>"
					},
					{
						"name": "Observable<OrderContext[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "select",
		"params": {},
		"returnType": "Observable<ClientContext>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "VDUGyrHlj8",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "select",
		"params": {},
		"returnType": "Observable<ClientContext>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"name": "select",
		"params": {},
		"returnType": "Observable<ClientContext>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"name": "select",
		"params": {},
		"returnType": "Observable<ClientContext>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "NdUqC0FF4b",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"position": 310
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "kSNiYr9ETd",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"position": 310
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "kSNiYr9ETd",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ClientContext>"
					},
					{
						"name": "Observable<ClientContext[]>"
					},
					{
						"name": "Observable<OrderContext>"
					},
					{
						"name": "Observable<OrderContext[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ClientContext>"
					},
					{
						"name": "Observable<ClientContext[]>"
					},
					{
						"name": "Observable<OrderContext>"
					},
					{
						"name": "Observable<OrderContext[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "setState",
		"params": {
			"state": "Client"
		},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "kSNiYr9ETd",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "setState",
		"params": {
			"state": "Client"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"name": "setState",
		"params": {
			"state": "Client"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"name": "setState",
		"params": {
			"state": "Client"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
		"position": 98
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "qLCj3GIH5x",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
		"position": 98
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "qLCj3GIH5x",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"name": "ClientContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts",
			"name": "SelectOrderContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts",
			"name": "SetsStateOrderContextPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"name": "ClientContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts",
			"name": "SelectOrderContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts",
			"name": "SetsStateOrderContextPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "qLCj3GIH5x",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
		"position": 479
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "jloQQ3cv4k",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
		"position": 479
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "select()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"select"
								]
							}
						]
					},
					{
						"label": "setState()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"setState"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "select()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"select"
								]
							}
						]
					},
					{
						"label": "setState()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"setState"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/properties/subject/flow: {
	"action": "rxjs/properties/subject/flow",
	"params": {
		"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
		"label": "Create Subject Property",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "jloQQ3cv4k",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/properties/subject/flow"
}
[info] [CLI] Calling Query rxjs/properties/subject/flow: {
	"funcParams": {
		"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
		"label": "Create Subject Property",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/properties/subject/flow"
}
[info] [CLI] Called Query rxjs/properties/subject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input"
			},
			{
				"contextId": "subject",
				"title": "What type of subject?",
				"type": "multi-option",
				"options": [
					{
						"name": "Subject"
					},
					{
						"name": "BehaviorSubject"
					},
					{
						"name": "ReplaySubject"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "property",
				"title": "Which type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "ClientContext"
					},
					{
						"name": "OrderContext"
					},
					{
						"name": "string"
					},
					{
						"name": "number"
					},
					{
						"name": "boolean"
					},
					{
						"name": "void"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/subject/create",
				"payload": {
					"name": "name.value",
					"subjectType": "subject.name",
					"propertyType": "property.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/properties/subject/flow"
}
[info] [API] Response ok: rxjs/properties/subject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input"
			},
			{
				"contextId": "subject",
				"title": "What type of subject?",
				"type": "multi-option",
				"options": [
					{
						"name": "Subject"
					},
					{
						"name": "BehaviorSubject"
					},
					{
						"name": "ReplaySubject"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "property",
				"title": "Which type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "ClientContext"
					},
					{
						"name": "OrderContext"
					},
					{
						"name": "string"
					},
					{
						"name": "number"
					},
					{
						"name": "boolean"
					},
					{
						"name": "void"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/subject/create",
				"payload": {
					"name": "name.value",
					"subjectType": "subject.name",
					"propertyType": "property.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/properties/subject/flow"
}
[info] [API] Request for rxjs/properties/subject/create: {
	"action": "rxjs/properties/subject/create",
	"params": {
		"name": "data",
		"subjectType": "ReplaySubject",
		"propertyType": "ClientContext"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "jloQQ3cv4k",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/properties/subject/create"
}
[info] [CLI] Calling Command rxjs/properties/subject/create: {
	"funcParams": {
		"name": "data",
		"subjectType": "ReplaySubject",
		"propertyType": "ClientContext"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/properties/subject/create"
}
[info] [CommandBus]: Dispatching command AddSubjectCommand: {
	"commandName": "AddSubjectCommand",
	"payload": {
		"classFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
		"name": "data",
		"subjecType": "ReplaySubject",
		"propertyType": "ClientContext"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddSubjectCommand"
}
[info] [CommandBus]: Handled  AddSubjectCommand: {
	"commandName": "AddSubjectCommand",
	"payload": {
		"classFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts",
		"name": "data",
		"subjecType": "ReplaySubject",
		"propertyType": "ClientContext"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddSubjectCommand"
}
[info] [CLI] Called Command rxjs/properties/subject/create: {
	"message": "[CLI] Called Command rxjs/properties/subject/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/properties/subject/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/properties/subject/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
		"position": 95
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "oXV692ooPU",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
		"position": 95
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "oXV692ooPU",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts",
			"name": "GetAllDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts",
			"name": "GetAllDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "oXV692ooPU",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
		"position": 395
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "pNrP-ockCR",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
		"position": 395
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "HttpClientService",
			"parentMethod": "getAll"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "HttpClientService",
			"parentMethod": "getAll"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "pNrP-ockCR",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "HttpClientService",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"HttpClientService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "HttpClientService",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"HttpClientService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"get"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "pNrP-ockCR",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"get"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-client.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "YE_VeFElfh",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage-module.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-resolver/create: {
	"action": "angular-resolver/create",
	"params": {
		"name": "load-all-clients",
		"entityId": "resolver"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "YE_VeFElfh",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/client/in-memory-client.storage-module.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-resolver/create"
}
[info] [CLI] Calling Command angular-resolver/create: {
	"funcParams": {
		"name": "load-all-clients",
		"entityId": "resolver"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-resolver/create"
}
[info] [CommandBus]: Dispatching command RESOLVER_CREATE_RESOLVER: {
	"commandName": "RESOLVER_CREATE_RESOLVER",
	"payload": {
		"name": "load-all-clients",
		"suffix": "Resolver",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command RESOLVER_CREATE_RESOLVER"
}
[info] [EventBus]: Broadcasting event RESOLVER_CREATED: {
	"type": "RESOLVER_CREATED",
	"payload": {
		"resolverFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event RESOLVER_CREATED"
}
[info] [EventBus]: Broadcasted RESOLVER_CREATED: {
	"event": {
		"resolverFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted RESOLVER_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
		"entityType": "ANGULAR_RESOLVER"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_MODULE"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
		"entityType": "ANGULAR_RESOLVER"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_MODULE"
}
[info] [CommandBus]: Handled  RESOLVER_CREATE_RESOLVER: {
	"commandName": "RESOLVER_CREATE_RESOLVER",
	"payload": {
		"name": "load-all-clients",
		"suffix": "Resolver",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  RESOLVER_CREATE_RESOLVER"
}
[info] [CLI] Called Command angular-resolver/create: {
	"message": "[CLI] Called Command angular-resolver/create",
	"level": "info"
}
[info] [API] Response ok: angular-resolver/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-resolver/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
		"position": 342
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "gzZ8E4qG-H",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
		"position": 342
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "LoadAllClientsResolver",
			"parentMethod": "resolve"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "LoadAllClientsResolver",
			"parentMethod": "resolve"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
		"position": 342
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "2P7-WHT1bR",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
		"position": 342
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "LoadAllClientsResolver",
			"parentMethod": "resolve"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "LoadAllClientsResolver",
			"parentMethod": "resolve"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"resolve"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "2P7-WHT1bR",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"resolve"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"resolve"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "LoadAllClientsResolver",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts"
					},
					{
						"name": "LoadClientsCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
					},
					{
						"name": "LoadOrdersCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"LoadAllClientsResolver": [
						{
							"name": "resolve()",
							"callPath": [
								"resolve"
							]
						}
					],
					"LoadClientsCommandPort": [
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						}
					],
					"LoadOrdersCommandPort": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"resolve"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "LoadAllClientsResolver",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts"
					},
					{
						"name": "LoadClientsCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
					},
					{
						"name": "LoadOrdersCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"LoadAllClientsResolver": [
						{
							"name": "resolve()",
							"callPath": [
								"resolve"
							]
						}
					],
					"LoadClientsCommandPort": [
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						}
					],
					"LoadOrdersCommandPort": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"resolve"
		],
		"dependencyCallPath": [
			"loadClient"
		],
		"dependencyType": "LoadClientsCommandPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "2P7-WHT1bR",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"resolve"
		],
		"dependencyCallPath": [
			"loadClient"
		],
		"dependencyType": "LoadClientsCommandPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
		"callPath": [
			"resolve"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"dependencyType": "LoadClientsCommandPort",
		"dependencyCallPath": [
			"loadClient"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts",
		"callPath": [
			"resolve"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"dependencyType": "LoadClientsCommandPort",
		"dependencyCallPath": [
			"loadClient"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-clients.resolver.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 1745
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "StIkNdShif",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 1745
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "StIkNdShif",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "StIkNdShif",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 1897
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "-uyRqO8J64",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 1897
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "-uyRqO8J64",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"name": "ClientContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"name": "ClientContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "-uyRqO8J64",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2133
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Mew__Zos3p",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2133
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"loadClient"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Mew__Zos3p",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"loadClient"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"loadClient"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderState",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
					},
					{
						"name": "GetAllDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts"
					},
					{
						"name": "ClientContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
					},
					{
						"name": "SelectOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts"
					},
					{
						"name": "SetsStateOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts"
					},
					{
						"name": "GetAllClientDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"OrderState": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						},
						{
							"name": "getCurrentOrderList()",
							"callPath": [
								"getCurrentOrderList"
							]
						},
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						}
					],
					"GetAllDtoPort": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"ClientContextPort": [
						{
							"name": "select()",
							"callPath": [
								"select"
							]
						},
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"SelectOrderContextPort": [
						{
							"name": "select()",
							"callPath": [
								"select"
							]
						}
					],
					"SetsStateOrderContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"GetAllClientDtoPort": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"loadClient"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderState",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
					},
					{
						"name": "GetAllDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts"
					},
					{
						"name": "ClientContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
					},
					{
						"name": "SelectOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts"
					},
					{
						"name": "SetsStateOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts"
					},
					{
						"name": "GetAllClientDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"OrderState": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						},
						{
							"name": "getCurrentOrderList()",
							"callPath": [
								"getCurrentOrderList"
							]
						},
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						}
					],
					"GetAllDtoPort": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"ClientContextPort": [
						{
							"name": "select()",
							"callPath": [
								"select"
							]
						},
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"SelectOrderContextPort": [
						{
							"name": "select()",
							"callPath": [
								"select"
							]
						}
					],
					"SetsStateOrderContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"GetAllClientDtoPort": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"loadClient"
		],
		"dependencyCallPath": [
			"getAll"
		],
		"dependencyType": "GetAllClientDtoPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Mew__Zos3p",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"loadClient"
		],
		"dependencyCallPath": [
			"getAll"
		],
		"dependencyType": "GetAllClientDtoPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"callPath": [
			"loadClient"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
		"dependencyType": "GetAllClientDtoPort",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"callPath": [
			"loadClient"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
		"dependencyType": "GetAllClientDtoPort",
		"dependencyCallPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2143
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "e55yG6hRUo",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2143
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/call-expressions/map-to/flow: {
	"action": "rxjs/call-expressions/map-to/flow",
	"params": {
		"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
		"label": "Map To",
		"callPath": [
			"loadClient"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "e55yG6hRUo",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/call-expressions/map-to/flow"
}
[info] [CLI] Calling Query rxjs/call-expressions/map-to/flow: {
	"funcParams": {
		"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
		"label": "Map To",
		"callPath": [
			"loadClient"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/call-expressions/map-to/flow"
}
[info] [CLI] Called Query rxjs/call-expressions/map-to/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"loadClient"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to map to?",
				"type": "multi-option",
				"options": [
					{
						"name": "ActivitiesQuery",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/activities.query.ts"
					},
					{
						"name": "ClientQuery",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/client.query.ts"
					},
					{
						"name": "EmployeeQuery",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/employee.query.ts"
					},
					{
						"name": "OrderListQuery",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/order-list.query.ts"
					},
					{
						"name": "OrderQuery",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/order.query.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/map-to",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/call-expressions/map-to/flow"
}
[info] [API] Response ok: rxjs/call-expressions/map-to/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"loadClient"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to map to?",
				"type": "multi-option",
				"options": [
					{
						"name": "ActivitiesQuery",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/activities.query.ts"
					},
					{
						"name": "ClientQuery",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/client.query.ts"
					},
					{
						"name": "EmployeeQuery",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/employee.query.ts"
					},
					{
						"name": "OrderListQuery",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/order-list.query.ts"
					},
					{
						"name": "OrderQuery",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/order.query.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/map-to",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/call-expressions/map-to/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2143
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "m5xyT2HekB",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2143
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/call-expressions/map/flow: {
	"action": "rxjs/call-expressions/map/flow",
	"params": {
		"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
		"label": "Map Statement",
		"callPath": [
			"loadClient"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "m5xyT2HekB",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/call-expressions/map/flow"
}
[info] [CLI] Calling Query rxjs/call-expressions/map/flow: {
	"funcParams": {
		"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
		"label": "Map Statement",
		"callPath": [
			"loadClient"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/call-expressions/map/flow"
}
[info] [CLI] Called Query rxjs/call-expressions/map/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"loadClient"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderState",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
					},
					{
						"name": "GetAllDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts"
					},
					{
						"name": "ClientContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
					},
					{
						"name": "SelectOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts"
					},
					{
						"name": "SetsStateOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts"
					},
					{
						"name": "GetAllClientDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "member",
				"title": "Which member to use?",
				"type": "multi-option",
				"options": {
					"OrderState": [
						{
							"name": "getCurrentOrderList()",
							"callPath": [
								"getCurrentOrderList"
							]
						}
					],
					"GetAllDtoPort": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"ClientContextPort": [
						{
							"name": "select()",
							"callPath": [
								"select"
							]
						}
					],
					"SelectOrderContextPort": [
						{
							"name": "select()",
							"callPath": [
								"select"
							]
						}
					],
					"SetsStateOrderContextPort": [],
					"GetAllClientDtoPort": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/map",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyCallPath": "member.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/call-expressions/map/flow"
}
[info] [API] Response ok: rxjs/call-expressions/map/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"loadClient"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderState",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
					},
					{
						"name": "GetAllDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts"
					},
					{
						"name": "ClientContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
					},
					{
						"name": "SelectOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts"
					},
					{
						"name": "SetsStateOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts"
					},
					{
						"name": "GetAllClientDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "member",
				"title": "Which member to use?",
				"type": "multi-option",
				"options": {
					"OrderState": [
						{
							"name": "getCurrentOrderList()",
							"callPath": [
								"getCurrentOrderList"
							]
						}
					],
					"GetAllDtoPort": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"ClientContextPort": [
						{
							"name": "select()",
							"callPath": [
								"select"
							]
						}
					],
					"SelectOrderContextPort": [
						{
							"name": "select()",
							"callPath": [
								"select"
							]
						}
					],
					"SetsStateOrderContextPort": [],
					"GetAllClientDtoPort": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/map",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyCallPath": "member.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/call-expressions/map/flow"
}
[info] [API] Request for rxjs/call-expressions/map: {
	"action": "rxjs/call-expressions/map",
	"params": {
		"callExpressionCallPath": [
			"loadClient"
		],
		"dependencyCallPath": [
			"select"
		],
		"dependencyName": "ClientContextPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "m5xyT2HekB",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/call-expressions/map"
}
[info] [CLI] Calling Command rxjs/call-expressions/map: {
	"funcParams": {
		"callExpressionCallPath": [
			"loadClient"
		],
		"dependencyCallPath": [
			"select"
		],
		"dependencyName": "ClientContextPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/call-expressions/map"
}
[info] [CommandBus]: Dispatching command MapObservableCommand: {
	"commandName": "MapObservableCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"entityMemberCallPath": [
			"loadClient"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"dependencyName": "ClientContextPort",
		"dependencyCall": [
			"select"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MapObservableCommand"
}
[info] [CommandBus]: Handled  MapObservableCommand: {
	"commandName": "MapObservableCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"entityMemberCallPath": [
			"loadClient"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"dependencyName": "ClientContextPort",
		"dependencyCall": [
			"select"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MapObservableCommand"
}
[info] [CLI] Called Command rxjs/call-expressions/map: {
	"message": "[CLI] Called Command rxjs/call-expressions/map",
	"level": "info"
}
[info] [API] Response ok: rxjs/call-expressions/map: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/call-expressions/map"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 353
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "f0NxjM91EU",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 353
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Ny3h9u1BAI",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/client.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "gets-current-client-list",
		"entityId": "queryPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Ny3h9u1BAI",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/client.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "gets-current-client-list",
		"entityId": "queryPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query",
		"name": "gets-current-client-list",
		"suffix": "QueryPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query",
		"name": "gets-current-client-list",
		"suffix": "QueryPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "_er0MtIWFv",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "client-list",
		"properties": {
			"clientList": "ClientQuery[]"
		},
		"entityId": "query"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "_er0MtIWFv",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "client-list",
		"properties": {
			"clientList": "ClientQuery[]"
		},
		"entityId": "query"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query",
		"name": "client-list",
		"suffix": "Query",
		"properties": {
			"clientList": "ClientQuery[]"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query",
		"name": "client-list",
		"suffix": "Query",
		"properties": {
			"clientList": "ClientQuery[]"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/client-list.query.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"position": 244
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "78EM0jjAvR",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"position": 244
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "78EM0jjAvR",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ActivitiesQuery>"
					},
					{
						"name": "Observable<ActivitiesQuery[]>"
					},
					{
						"name": "Observable<ClientListQuery>"
					},
					{
						"name": "Observable<ClientListQuery[]>"
					},
					{
						"name": "Observable<ClientQuery>"
					},
					{
						"name": "Observable<ClientQuery[]>"
					},
					{
						"name": "Observable<EmployeeQuery>"
					},
					{
						"name": "Observable<EmployeeQuery[]>"
					},
					{
						"name": "Observable<OrderListQuery>"
					},
					{
						"name": "Observable<OrderListQuery[]>"
					},
					{
						"name": "Observable<OrderQuery>"
					},
					{
						"name": "Observable<OrderQuery[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ActivitiesQuery>"
					},
					{
						"name": "Observable<ActivitiesQuery[]>"
					},
					{
						"name": "Observable<ClientListQuery>"
					},
					{
						"name": "Observable<ClientListQuery[]>"
					},
					{
						"name": "Observable<ClientQuery>"
					},
					{
						"name": "Observable<ClientQuery[]>"
					},
					{
						"name": "Observable<EmployeeQuery>"
					},
					{
						"name": "Observable<EmployeeQuery[]>"
					},
					{
						"name": "Observable<OrderListQuery>"
					},
					{
						"name": "Observable<OrderListQuery[]>"
					},
					{
						"name": "Observable<OrderQuery>"
					},
					{
						"name": "Observable<OrderQuery[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"position": 244
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "G8ApqmiGI2",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"position": 244
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "G8ApqmiGI2",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ActivitiesQuery>"
					},
					{
						"name": "Observable<ActivitiesQuery[]>"
					},
					{
						"name": "Observable<ClientListQuery>"
					},
					{
						"name": "Observable<ClientListQuery[]>"
					},
					{
						"name": "Observable<ClientQuery>"
					},
					{
						"name": "Observable<ClientQuery[]>"
					},
					{
						"name": "Observable<EmployeeQuery>"
					},
					{
						"name": "Observable<EmployeeQuery[]>"
					},
					{
						"name": "Observable<OrderListQuery>"
					},
					{
						"name": "Observable<OrderListQuery[]>"
					},
					{
						"name": "Observable<OrderQuery>"
					},
					{
						"name": "Observable<OrderQuery[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ActivitiesQuery>"
					},
					{
						"name": "Observable<ActivitiesQuery[]>"
					},
					{
						"name": "Observable<ClientListQuery>"
					},
					{
						"name": "Observable<ClientListQuery[]>"
					},
					{
						"name": "Observable<ClientQuery>"
					},
					{
						"name": "Observable<ClientQuery[]>"
					},
					{
						"name": "Observable<EmployeeQuery>"
					},
					{
						"name": "Observable<EmployeeQuery[]>"
					},
					{
						"name": "Observable<OrderListQuery>"
					},
					{
						"name": "Observable<OrderListQuery[]>"
					},
					{
						"name": "Observable<OrderQuery>"
					},
					{
						"name": "Observable<OrderQuery[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "getsCurrentClientList",
		"params": {},
		"returnType": "Observable<ClientListQuery>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "G8ApqmiGI2",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "getsCurrentClientList",
		"params": {},
		"returnType": "Observable<ClientListQuery>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"name": "getsCurrentClientList",
		"params": {},
		"returnType": "Observable<ClientListQuery>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"name": "getsCurrentClientList",
		"params": {},
		"returnType": "Observable<ClientListQuery>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2471
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "cfSBN9GTb-",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2471
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "loadClient"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "loadClient"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "cfSBN9GTb-",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "cfSBN9GTb-",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2575
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "-7tOPxL30N",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2575
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getsCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getsCurrentClientList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getsCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getsCurrentClientList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "-7tOPxL30N",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "-7tOPxL30N",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2757
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "3S1ju50Ywt",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2757
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getCurrentClientList"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "3S1ju50Ywt",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getCurrentClientList"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getCurrentClientList"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderState",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
					},
					{
						"name": "GetAllDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts"
					},
					{
						"name": "ClientContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
					},
					{
						"name": "SelectOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts"
					},
					{
						"name": "SetsStateOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts"
					},
					{
						"name": "GetAllClientDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"OrderState": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						},
						{
							"name": "getCurrentOrderList()",
							"callPath": [
								"getCurrentOrderList"
							]
						},
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						},
						{
							"name": "getCurrentClientList()",
							"callPath": [
								"getCurrentClientList"
							]
						}
					],
					"GetAllDtoPort": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"ClientContextPort": [
						{
							"name": "select()",
							"callPath": [
								"select"
							]
						},
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"SelectOrderContextPort": [
						{
							"name": "select()",
							"callPath": [
								"select"
							]
						}
					],
					"SetsStateOrderContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"GetAllClientDtoPort": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getCurrentClientList"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderState",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
					},
					{
						"name": "GetAllDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts"
					},
					{
						"name": "ClientContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
					},
					{
						"name": "SelectOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts"
					},
					{
						"name": "SetsStateOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts"
					},
					{
						"name": "GetAllClientDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"OrderState": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						},
						{
							"name": "getCurrentOrderList()",
							"callPath": [
								"getCurrentOrderList"
							]
						},
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						},
						{
							"name": "getCurrentClientList()",
							"callPath": [
								"getCurrentClientList"
							]
						}
					],
					"GetAllDtoPort": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"ClientContextPort": [
						{
							"name": "select()",
							"callPath": [
								"select"
							]
						},
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"SelectOrderContextPort": [
						{
							"name": "select()",
							"callPath": [
								"select"
							]
						}
					],
					"SetsStateOrderContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"GetAllClientDtoPort": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"getCurrentClientList"
		],
		"dependencyCallPath": [
			"setState"
		],
		"dependencyType": "ClientContextPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "3S1ju50Ywt",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"callPath": [
			"getCurrentClientList"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"dependencyType": "ClientContextPort",
		"dependencyCallPath": [
			"setState"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"getCurrentClientList"
		],
		"dependencyCallPath": [
			"setState"
		],
		"dependencyType": "ClientContextPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"callPath": [
			"getCurrentClientList"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
		"dependencyType": "ClientContextPort",
		"dependencyCallPath": [
			"setState"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/client.mapper.ts",
		"position": 441
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "04MdXuaU0W",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/client.mapper.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/client.mapper.ts",
		"position": 441
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[error] [API]: Error Entity not found for suffix: mapper: {
	"loggerData": {
		"action": "entity/actions",
		"params": {
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/client.mapper.ts",
			"position": 441
		},
		"context": {
			"workspace": {
				"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
			},
			"userContext": {
				"id": "6vwwznbuA4",
				"correlationId": "04MdXuaU0W",
				"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/client.mapper.ts",
				"logEnvId": "development"
			}
		}
	},
	"error": {},
	"stack": "Error: Entity not found for suffix: mapper\n    at getEntityActions (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:6597:15)\n    at async callQueryCli (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:8540:20)\n    at async callHandler (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:16691:27)",
	"level": "error",
	"message": "[API]: Error Entity not found for suffix: mapper"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 353
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "WNpABOrPr1",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 353
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/properties/data/flow: {
	"action": "rxjs/properties/data/flow",
	"params": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "WNpABOrPr1",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/properties/data/flow"
}
[info] [CLI] Calling Query rxjs/properties/data/flow: {
	"funcParams": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/properties/data/flow"
}
[info] [CLI] Called Query rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input"
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "NewOrderComponent",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
					},
					{
						"name": "GetsCurrentClientListQueryPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts"
					},
					{
						"name": "GetsCurrentOrderListQueryPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts"
					},
					{
						"name": "LoadClientsCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
					},
					{
						"name": "LoadOrdersCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"NewOrderComponent": [],
					"GetsCurrentClientListQueryPort": [
						{
							"name": "getCurrentClientList()",
							"callPath": [
								"getCurrentClientList"
							]
						}
					],
					"GetsCurrentOrderListQueryPort": [
						{
							"name": "getCurrentOrderList()",
							"callPath": [
								"getCurrentOrderList"
							]
						}
					],
					"LoadClientsCommandPort": [
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						}
					],
					"LoadOrdersCommandPort": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/properties/data/flow"
}
[info] [API] Response ok: rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input"
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "NewOrderComponent",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
					},
					{
						"name": "GetsCurrentClientListQueryPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts"
					},
					{
						"name": "GetsCurrentOrderListQueryPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts"
					},
					{
						"name": "LoadClientsCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
					},
					{
						"name": "LoadOrdersCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"NewOrderComponent": [],
					"GetsCurrentClientListQueryPort": [
						{
							"name": "getCurrentClientList()",
							"callPath": [
								"getCurrentClientList"
							]
						}
					],
					"GetsCurrentOrderListQueryPort": [
						{
							"name": "getCurrentOrderList()",
							"callPath": [
								"getCurrentOrderList"
							]
						}
					],
					"LoadClientsCommandPort": [
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						}
					],
					"LoadOrdersCommandPort": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/properties/data/flow"
}
[info] [API] Request for rxjs/properties/data/create: {
	"action": "rxjs/properties/data/create",
	"params": {
		"propertyName": "client",
		"dependencyCallPath": [
			"getCurrentClientList"
		],
		"dependencyName": "GetsCurrentClientListQueryPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "WNpABOrPr1",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/properties/data/create"
}
[info] [API] Response ok: rxjs/properties/data/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/properties/data/create"
}
[info] [CLI] Calling Command rxjs/properties/data/create: {
	"funcParams": {
		"propertyName": "client",
		"dependencyCallPath": [
			"getCurrentClientList"
		],
		"dependencyName": "GetsCurrentClientListQueryPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/properties/data/create"
}
[info] [CommandBus]: Dispatching command CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"entityPropertyName": "client",
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"dependencyName": "GetsCurrentClientListQueryPort",
		"dependencyCallPath": [
			"getCurrentClientList"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CreateDataPropertyCommand"
}
[info] [CLI] Called Command rxjs/properties/data/create: {
	"message": "[CLI] Called Command rxjs/properties/data/create",
	"level": "info"
}
[info] [CommandBus]: Handled  CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"entityPropertyName": "client",
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
		"dependencyName": "GetsCurrentClientListQueryPort",
		"dependencyCallPath": [
			"getCurrentClientList"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CreateDataPropertyCommand"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 922
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "VO850-gVvJ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 922
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for angular-component/properties/list: {
	"action": "angular-component/properties/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "VO850-gVvJ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/properties/list"
}
[info] [API] Response ok: angular-component/properties/list: {
	"result": [
		{
			"label": "client$",
			"templateType": "details",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/properties/list"
}
[info] [CLI] Calling Query angular-component/properties/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/properties/list"
}
[info] [CLI] Called Query angular-component/properties/list: {
	"result": [
		{
			"label": "client$",
			"templateType": "details",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/properties/list"
}
[info] [API] Request for angular-component/templates/get: {
	"action": "angular-component/templates/get",
	"params": {
		"name": "details"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "VO850-gVvJ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/get"
}
[info] [API] Response ok: angular-component/templates/get: {
	"result": [
		{
			"label": "content",
			"contextVariables": []
		},
		{
			"label": "text",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/get"
}
[info] [CLI] Calling Query angular-component/templates/get: {
	"funcParams": {
		"name": "details"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/get"
}
[info] [CLI] Called Query angular-component/templates/get: {
	"result": [
		{
			"label": "content",
			"contextVariables": []
		},
		{
			"label": "text",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/get"
}
[info] [API] Request for angular-component/templates/add-detail: {
	"action": "angular-component/templates/add-detail",
	"params": {
		"componentHtmlFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 922,
		"propertyName": "client$",
		"detailTemplate": "content"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "VO850-gVvJ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/add-detail"
}
[info] [CLI] Calling Command angular-component/templates/add-detail: {
	"funcParams": {
		"componentHtmlFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 922,
		"propertyName": "client$",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-detail"
}
[info] [CommandBus]: Dispatching command AddDetailToTemplateCommand: {
	"commandName": "AddDetailToTemplateCommand",
	"payload": {
		"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"componentHtml": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"className": "NewOrderComponent",
		"propertyName": "client$",
		"position": 922,
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddDetailToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  AddDetailToTemplateCommand: {
	"commandName": "AddDetailToTemplateCommand",
	"payload": {
		"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"componentHtml": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"className": "NewOrderComponent",
		"propertyName": "client$",
		"position": 922,
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddDetailToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-detail: {
	"message": "[CLI] Called Command angular-component/templates/add-detail",
	"level": "info"
}
[info] [API] Response ok: angular-component/templates/add-detail: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/add-detail"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 104
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "S_YEeMqjCr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 104
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for angular-component/properties/list: {
	"action": "angular-component/properties/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "S_YEeMqjCr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/properties/list"
}
[info] [API] Response ok: angular-component/properties/list: {
	"result": [
		{
			"label": "client$",
			"templateType": "details",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/properties/list"
}
[info] [CLI] Calling Query angular-component/properties/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/properties/list"
}
[info] [CLI] Called Query angular-component/properties/list: {
	"result": [
		{
			"label": "client$",
			"templateType": "details",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/properties/list"
}
[info] [API] Request for angular-component/templates/get: {
	"action": "angular-component/templates/get",
	"params": {
		"name": "details"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "S_YEeMqjCr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/get"
}
[info] [API] Response ok: angular-component/templates/get: {
	"result": [
		{
			"label": "content",
			"contextVariables": []
		},
		{
			"label": "text",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/get"
}
[info] [CLI] Calling Query angular-component/templates/get: {
	"funcParams": {
		"name": "details"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/get"
}
[info] [CLI] Called Query angular-component/templates/get: {
	"result": [
		{
			"label": "content",
			"contextVariables": []
		},
		{
			"label": "text",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/get"
}
[info] [API] Request for angular-component/templates/add-detail: {
	"action": "angular-component/templates/add-detail",
	"params": {
		"componentHtmlFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 104,
		"propertyName": "client$",
		"detailTemplate": "text"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "S_YEeMqjCr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/add-detail"
}
[info] [CLI] Calling Command angular-component/templates/add-detail: {
	"funcParams": {
		"componentHtmlFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 104,
		"propertyName": "client$",
		"detailTemplate": "text"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-detail"
}
[info] [CommandBus]: Dispatching command AddDetailToTemplateCommand: {
	"commandName": "AddDetailToTemplateCommand",
	"payload": {
		"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"componentHtml": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"className": "NewOrderComponent",
		"propertyName": "client$",
		"position": 104,
		"detailTemplate": "text"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddDetailToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddDetailToTemplateCommand: {
	"commandName": "AddDetailToTemplateCommand",
	"payload": {
		"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"componentHtml": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"className": "NewOrderComponent",
		"propertyName": "client$",
		"position": 104,
		"detailTemplate": "text"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddDetailToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-detail: {
	"message": "[CLI] Called Command angular-component/templates/add-detail",
	"level": "info"
}
[info] [API] Response ok: angular-component/templates/add-detail: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/add-detail"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 2296
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "93tCmEoslJ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 2296
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "client$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"client$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"client$"
								]
							}
						]
					},
					{
						"label": "filteredClient",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"filteredClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"filteredClient"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "ngOnInit()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"ngOnInit"
								]
							}
						]
					},
					{
						"label": "getOptionText()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getOptionText"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getOptionText"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getOptionText"
								]
							}
						]
					},
					{
						"label": "_filter()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"_filter"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"_filter"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"_filter"
								]
							}
						]
					},
					{
						"label": "getPosts()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getPosts"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getPosts"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getPosts"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "client$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"client$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"client$"
								]
							}
						]
					},
					{
						"label": "filteredClient",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"filteredClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"filteredClient"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "ngOnInit()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"ngOnInit"
								]
							}
						]
					},
					{
						"label": "getOptionText()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getOptionText"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getOptionText"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getOptionText"
								]
							}
						]
					},
					{
						"label": "_filter()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"_filter"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"_filter"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"_filter"
								]
							}
						]
					},
					{
						"label": "getPosts()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getPosts"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getPosts"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getPosts"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for angular-component/form-properties/add: {
	"action": "angular-component/form-properties/add",
	"params": {
		"propertyName": "order",
		"componentFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"fields": {
			"name": "text",
			"nip": "text"
		}
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "93tCmEoslJ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/form-properties/add"
}
[info] [CLI] Calling Command angular-component/form-properties/add: {
	"funcParams": {
		"propertyName": "order",
		"componentFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"fields": {
			"name": "text",
			"nip": "text"
		}
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/form-properties/add"
}
[info] [CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"propertyName": "order",
		"fields": {
			"name": "text",
			"nip": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED: {
	"type": "SMART_COMPONENT_FORM_ADDED",
	"payload": {
		"componentFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"componentName": "NewOrderComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED"
}
[info] [EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED: {
	"event": {
		"componentFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"componentName": "NewOrderComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED"
}
[info] [CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"propertyName": "order",
		"fields": {
			"name": "text",
			"nip": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [CLI] Called Command angular-component/form-properties/add: {
	"message": "[CLI] Called Command angular-component/form-properties/add",
	"level": "info"
}
[info] [API] Response ok: angular-component/form-properties/add: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/form-properties/add"
}
[info] [CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "NewOrderComponentModule",
				"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "NewOrderComponentModule",
				"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 6345
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "iH8Nku7as3",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 6345
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for angular-component/properties/list: {
	"action": "angular-component/properties/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "iH8Nku7as3",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/properties/list"
}
[info] [API] Response ok: angular-component/properties/list: {
	"result": [
		{
			"label": "order",
			"templateType": "forms",
			"typeProperties": []
		},
		{
			"label": "myControl",
			"templateType": "forms",
			"typeProperties": []
		},
		{
			"label": "client$",
			"templateType": "details",
			"typeProperties": []
		},
		{
			"label": "filteredClient",
			"templateType": "lists",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/properties/list"
}
[info] [CLI] Calling Query angular-component/properties/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/properties/list"
}
[info] [CLI] Called Query angular-component/properties/list: {
	"result": [
		{
			"label": "order",
			"templateType": "forms",
			"typeProperties": []
		},
		{
			"label": "myControl",
			"templateType": "forms",
			"typeProperties": []
		},
		{
			"label": "client$",
			"templateType": "details",
			"typeProperties": []
		},
		{
			"label": "filteredClient",
			"templateType": "lists",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/properties/list"
}
[info] [API] Request for angular-component/templates/get: {
	"action": "angular-component/templates/get",
	"params": {
		"name": "forms"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "iH8Nku7as3",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/get"
}
[info] [API] Response ok: angular-component/templates/get: {
	"result": [
		{
			"label": "form",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/get"
}
[info] [CLI] Calling Query angular-component/templates/get: {
	"funcParams": {
		"name": "forms"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/get"
}
[info] [CLI] Called Query angular-component/templates/get: {
	"result": [
		{
			"label": "form",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/get"
}
[info] [API] Request for angular-component/templates/add-form: {
	"action": "angular-component/templates/add-form",
	"params": {
		"componentHtmlFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 6345,
		"propertyName": "order",
		"formTemplate": "form"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "iH8Nku7as3",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/add-form"
}
[info] [CLI] Calling Command angular-component/templates/add-form: {
	"funcParams": {
		"componentHtmlFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 6345,
		"propertyName": "order",
		"formTemplate": "form"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-form"
}
[info] [CommandBus]: Dispatching command AddFormToTemplateCommand: {
	"commandName": "AddFormToTemplateCommand",
	"payload": {
		"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"componentHtml": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"className": "NewOrderComponent",
		"propertyName": "order",
		"position": 6345,
		"formTemplate": "form"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddFormToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddFormToTemplateCommand: {
	"commandName": "AddFormToTemplateCommand",
	"payload": {
		"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"componentHtml": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"className": "NewOrderComponent",
		"propertyName": "order",
		"position": 6345,
		"formTemplate": "form"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddFormToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-form: {
	"message": "[CLI] Called Command angular-component/templates/add-form",
	"level": "info"
}
[info] [API] Response ok: angular-component/templates/add-form: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/add-form"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "GIzdA_XT9-",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "get-all-employee",
		"entityId": "dtoPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "GIzdA_XT9-",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "get-all-employee",
		"entityId": "dtoPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "get-all-employee",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "get-all-employee",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all-employee.dto-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
		"position": 206
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "_-_pPvspFD",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
		"position": 206
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "_-_pPvspFD",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ActivitiesTemplateDto>"
					},
					{
						"name": "Observable<ActivitiesTemplateDto[]>"
					},
					{
						"name": "Observable<ActivitiesDto>"
					},
					{
						"name": "Observable<ActivitiesDto[]>"
					},
					{
						"name": "Observable<OrderDto>"
					},
					{
						"name": "Observable<OrderDto[]>"
					},
					{
						"name": "Observable<ClientDto>"
					},
					{
						"name": "Observable<ClientDto[]>"
					},
					{
						"name": "Observable<EmployeeDto>"
					},
					{
						"name": "Observable<EmployeeDto[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ActivitiesTemplateDto>"
					},
					{
						"name": "Observable<ActivitiesTemplateDto[]>"
					},
					{
						"name": "Observable<ActivitiesDto>"
					},
					{
						"name": "Observable<ActivitiesDto[]>"
					},
					{
						"name": "Observable<OrderDto>"
					},
					{
						"name": "Observable<OrderDto[]>"
					},
					{
						"name": "Observable<ClientDto>"
					},
					{
						"name": "Observable<ClientDto[]>"
					},
					{
						"name": "Observable<EmployeeDto>"
					},
					{
						"name": "Observable<EmployeeDto[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "getAll",
		"params": {},
		"returnType": "Observable<EmployeeDto[]>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "_-_pPvspFD",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "getAll",
		"params": {},
		"returnType": "Observable<EmployeeDto[]>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<EmployeeDto[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<EmployeeDto[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "T_B0hOdwkl",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "2ZHz4pWhIx",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "load-employee",
		"entityId": "commandPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "2ZHz4pWhIx",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "load-employee",
		"entityId": "commandPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "load-employee",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "load-employee",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/load-employee.command-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employee.command-port.ts",
		"position": 211
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "P9MTSy1ZDC",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employee.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employee.command-port.ts",
		"position": 211
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "P9MTSy1ZDC",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employee.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<LoadClientsCommand>"
					},
					{
						"name": "Observable<LoadClientsCommand[]>"
					},
					{
						"name": "Observable<LoadOrdersCommand>"
					},
					{
						"name": "Observable<LoadOrdersCommand[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<LoadClientsCommand>"
					},
					{
						"name": "Observable<LoadClientsCommand[]>"
					},
					{
						"name": "Observable<LoadOrdersCommand>"
					},
					{
						"name": "Observable<LoadOrdersCommand[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "loadEmployees",
		"params": {},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "P9MTSy1ZDC",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employee.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "loadEmployees",
		"params": {},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employee.command-port.ts",
		"name": "loadEmployees",
		"params": {},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employee.command-port.ts",
		"name": "loadEmployees",
		"params": {},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employee.command-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "49TNKAv0eb",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "employee",
		"properties": {},
		"entityId": "context"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "49TNKAv0eb",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "employee",
		"properties": {},
		"entityId": "context"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee",
		"name": "employee",
		"suffix": "Context",
		"properties": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee",
		"name": "employee",
		"suffix": "Context",
		"properties": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "EwYIra49ne",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "employee",
		"entityId": "contextPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "EwYIra49ne",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "employee",
		"entityId": "contextPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee",
		"name": "employee",
		"suffix": "ContextPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee",
		"name": "employee",
		"suffix": "ContextPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "XdQjJ5kgNg",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "http-Employee",
		"entityId": "service"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "XdQjJ5kgNg",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "http-Employee",
		"entityId": "service"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
		"name": "http-Employee",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
		"name": "http-Employee",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
		"position": 96
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "PNFd526ZGX",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
		"position": 96
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "PNFd526ZGX",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts",
			"name": "GetAllDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"name": "GetAllEmployeeDtoPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts",
			"name": "GetAllDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"name": "GetAllEmployeeDtoPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "PNFd526ZGX",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
		"position": 419
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "VOaMNC-j79",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
		"position": 419
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "VOaMNC-j79",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "HttpEmployeeService",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"HttpEmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "HttpEmployeeService",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"HttpEmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"get"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "VOaMNC-j79",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"get"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2982
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "pqSi0Md-en",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2982
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "pqSi0Md-en",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2982
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "C_FXvdD9VJ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2982
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "C_FXvdD9VJ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"name": "GetAllEmployeeDtoPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"name": "GetAllEmployeeDtoPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "C_FXvdD9VJ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3079
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "PKod7qVuZv",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "getCurrentClientList"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3079
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "getCurrentClientList"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "PKod7qVuZv",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "PKod7qVuZv",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "n4CzxaT9VO",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "P7LLo9vB1p",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "in-memory-new-order",
		"entityId": "storage"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "P7LLo9vB1p",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "in-memory-new-order",
		"entityId": "storage"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages",
		"name": "in-memory-new-order",
		"suffix": "Storage"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages",
		"name": "in-memory-new-order",
		"suffix": "Storage"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "mnZNyMbuVM",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "new-order",
		"properties": {},
		"entityId": "context"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "mnZNyMbuVM",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "new-order",
		"properties": {},
		"entityId": "context"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order",
		"name": "new-order",
		"suffix": "Context",
		"properties": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order",
		"name": "new-order",
		"suffix": "Context",
		"properties": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "5q8eoweDql",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "new-order",
		"entityId": "contextPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "5q8eoweDql",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "new-order",
		"entityId": "contextPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order",
		"name": "new-order",
		"suffix": "ContextPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order",
		"name": "new-order",
		"suffix": "ContextPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
		"position": 196
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "I5Xw7mOIe7",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
		"position": 196
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
		"position": 194
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "y1qPH-jaMd",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
		"position": 194
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3333
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "GcvKxrlj4A",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3333
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 100
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "X9YOJGbgHK",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 100
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 100
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "XYrCmQs2bj",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 100
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/properties/data/flow: {
	"action": "rxjs/properties/data/flow",
	"params": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "XYrCmQs2bj",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/properties/data/flow"
}
[info] [CLI] Calling Query rxjs/properties/data/flow: {
	"funcParams": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/properties/data/flow"
}
[info] [CLI] Called Query rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input"
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "InMemoryNewOrderStorage",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"InMemoryNewOrderStorage": []
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/properties/data/flow"
}
[info] [API] Response ok: rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input"
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "InMemoryNewOrderStorage",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"InMemoryNewOrderStorage": []
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/properties/data/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 100
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "S76fRIe0ho",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 100
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "S76fRIe0ho",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"name": "ClientContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
			"name": "NewOrderContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts",
			"name": "SelectOrderContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts",
			"name": "SetsStateOrderContextPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"name": "ClientContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
			"name": "NewOrderContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts",
			"name": "SelectOrderContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts",
			"name": "SetsStateOrderContextPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 100
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "3y9KPv0XNA",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 100
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/properties/subject/flow: {
	"action": "rxjs/properties/subject/flow",
	"params": {
		"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
		"label": "Create Subject Property",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "3y9KPv0XNA",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/properties/subject/flow"
}
[info] [CLI] Calling Query rxjs/properties/subject/flow: {
	"funcParams": {
		"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
		"label": "Create Subject Property",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/properties/subject/flow"
}
[info] [CLI] Called Query rxjs/properties/subject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input"
			},
			{
				"contextId": "subject",
				"title": "What type of subject?",
				"type": "multi-option",
				"options": [
					{
						"name": "Subject"
					},
					{
						"name": "BehaviorSubject"
					},
					{
						"name": "ReplaySubject"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "property",
				"title": "Which type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "ClientContext"
					},
					{
						"name": "EmployeeContext"
					},
					{
						"name": "NewOrderContext"
					},
					{
						"name": "OrderContext"
					},
					{
						"name": "string"
					},
					{
						"name": "number"
					},
					{
						"name": "boolean"
					},
					{
						"name": "void"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/subject/create",
				"payload": {
					"name": "name.value",
					"subjectType": "subject.name",
					"propertyType": "property.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/properties/subject/flow"
}
[info] [API] Response ok: rxjs/properties/subject/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input"
			},
			{
				"contextId": "subject",
				"title": "What type of subject?",
				"type": "multi-option",
				"options": [
					{
						"name": "Subject"
					},
					{
						"name": "BehaviorSubject"
					},
					{
						"name": "ReplaySubject"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "property",
				"title": "Which type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "ClientContext"
					},
					{
						"name": "EmployeeContext"
					},
					{
						"name": "NewOrderContext"
					},
					{
						"name": "OrderContext"
					},
					{
						"name": "string"
					},
					{
						"name": "number"
					},
					{
						"name": "boolean"
					},
					{
						"name": "void"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/subject/create",
				"payload": {
					"name": "name.value",
					"subjectType": "subject.name",
					"propertyType": "property.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/properties/subject/flow"
}
[info] [API] Request for rxjs/properties/subject/create: {
	"action": "rxjs/properties/subject/create",
	"params": {
		"name": "data",
		"subjectType": "BehaviorSubject",
		"propertyType": "NewOrderContext"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "3y9KPv0XNA",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/properties/subject/create"
}
[info] [CLI] Calling Command rxjs/properties/subject/create: {
	"funcParams": {
		"name": "data",
		"subjectType": "BehaviorSubject",
		"propertyType": "NewOrderContext"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/properties/subject/create"
}
[info] [CommandBus]: Dispatching command AddSubjectCommand: {
	"commandName": "AddSubjectCommand",
	"payload": {
		"classFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"name": "data",
		"subjecType": "BehaviorSubject",
		"propertyType": "NewOrderContext"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddSubjectCommand"
}
[info] [CommandBus]: Handled  AddSubjectCommand: {
	"commandName": "AddSubjectCommand",
	"payload": {
		"classFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"name": "data",
		"subjecType": "BehaviorSubject",
		"propertyType": "NewOrderContext"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddSubjectCommand"
}
[info] [CLI] Called Command rxjs/properties/subject/create: {
	"message": "[CLI] Called Command rxjs/properties/subject/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/properties/subject/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/properties/subject/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 715
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "3VuduBlxdi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 715
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "patch()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"patch"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"patch"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"patch"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "patch()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"patch"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"patch"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"patch"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 715
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "UD3CEshJNz",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 715
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "patch()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"patch"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"patch"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"patch"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "patch()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"patch"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"patch"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"patch"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 715
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "kdyxCqS5LZ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"position": 715
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "patch()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"patch"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"patch"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"patch"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "patch()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"patch"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"patch"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"patch"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "kdyxCqS5LZ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"name": "ClientContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
			"name": "NewOrderContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts",
			"name": "SelectOrderContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts",
			"name": "SetsStateOrderContextPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts",
			"name": "ClientContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
			"name": "NewOrderContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts",
			"name": "SelectOrderContextPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts",
			"name": "SetsStateOrderContextPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "kdyxCqS5LZ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages/in-memory-new-order.storage.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3334
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "tdBBohzLAr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3334
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "loadEmployees"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "loadEmployees"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/call-expressions/tap/flow: {
	"action": "rxjs/call-expressions/tap/flow",
	"params": {
		"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
		"label": "Statement Side Effect",
		"callPath": [
			"loadEmployees"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "tdBBohzLAr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/call-expressions/tap/flow"
}
[info] [CLI] Calling Query rxjs/call-expressions/tap/flow: {
	"funcParams": {
		"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
		"label": "Statement Side Effect",
		"callPath": [
			"loadEmployees"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/call-expressions/tap/flow"
}
[info] [CLI] Called Query rxjs/call-expressions/tap/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"loadEmployees"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderState",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
					},
					{
						"name": "GetAllDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts"
					},
					{
						"name": "ClientContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
					},
					{
						"name": "EmployeeContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts"
					},
					{
						"name": "NewOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts"
					},
					{
						"name": "SelectOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts"
					},
					{
						"name": "SetsStateOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts"
					},
					{
						"name": "GetAllClientDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
					},
					{
						"name": "GetAllEmployeeDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which member to use?",
				"type": "multi-option",
				"options": {
					"OrderState": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						},
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						},
						{
							"name": "loadEmployees()",
							"callPath": [
								"loadEmployees"
							]
						}
					],
					"GetAllDtoPort": [],
					"ClientContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"EmployeeContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"NewOrderContextPort": [
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						}
					],
					"SelectOrderContextPort": [],
					"SetsStateOrderContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"GetAllClientDtoPort": [],
					"GetAllEmployeeDtoPort": []
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/tap",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/call-expressions/tap/flow"
}
[info] [API] Response ok: rxjs/call-expressions/tap/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"loadEmployees"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderState",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
					},
					{
						"name": "GetAllDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts"
					},
					{
						"name": "ClientContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
					},
					{
						"name": "EmployeeContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts"
					},
					{
						"name": "NewOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts"
					},
					{
						"name": "SelectOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts"
					},
					{
						"name": "SetsStateOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts"
					},
					{
						"name": "GetAllClientDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
					},
					{
						"name": "GetAllEmployeeDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which member to use?",
				"type": "multi-option",
				"options": {
					"OrderState": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						},
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						},
						{
							"name": "loadEmployees()",
							"callPath": [
								"loadEmployees"
							]
						}
					],
					"GetAllDtoPort": [],
					"ClientContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"EmployeeContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"NewOrderContextPort": [
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						}
					],
					"SelectOrderContextPort": [],
					"SetsStateOrderContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"GetAllClientDtoPort": [],
					"GetAllEmployeeDtoPort": []
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/tap",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/call-expressions/tap/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3119
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "UN196bJlIX",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3119
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "UN196bJlIX",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3119
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "QHRrq5Q6Jd",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3119
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "QHRrq5Q6Jd",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
			"name": "NewOrderContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts",
			"name": "NewOrderContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "QHRrq5Q6Jd",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3601
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "p1RdFMtlH5",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3601
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/call-expressions/tap/flow: {
	"action": "rxjs/call-expressions/tap/flow",
	"params": {
		"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
		"label": "Statement Side Effect",
		"callPath": [
			"loadEmployees"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "p1RdFMtlH5",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/call-expressions/tap/flow"
}
[info] [CLI] Calling Query rxjs/call-expressions/tap/flow: {
	"funcParams": {
		"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
		"label": "Statement Side Effect",
		"callPath": [
			"loadEmployees"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/call-expressions/tap/flow"
}
[info] [CLI] Called Query rxjs/call-expressions/tap/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"loadEmployees"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderState",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
					},
					{
						"name": "GetAllDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts"
					},
					{
						"name": "ClientContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
					},
					{
						"name": "EmployeeContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts"
					},
					{
						"name": "NewOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts"
					},
					{
						"name": "SelectOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts"
					},
					{
						"name": "SetsStateOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts"
					},
					{
						"name": "GetAllClientDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
					},
					{
						"name": "GetAllEmployeeDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which member to use?",
				"type": "multi-option",
				"options": {
					"OrderState": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						},
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						},
						{
							"name": "loadEmployees()",
							"callPath": [
								"loadEmployees"
							]
						}
					],
					"GetAllDtoPort": [],
					"ClientContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"EmployeeContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"NewOrderContextPort": [
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						}
					],
					"SelectOrderContextPort": [],
					"SetsStateOrderContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"GetAllClientDtoPort": [],
					"GetAllEmployeeDtoPort": []
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/tap",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/call-expressions/tap/flow"
}
[info] [API] Response ok: rxjs/call-expressions/tap/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"loadEmployees"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderState",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
					},
					{
						"name": "GetAllDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts"
					},
					{
						"name": "ClientContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/client/client.context-port.ts"
					},
					{
						"name": "EmployeeContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts"
					},
					{
						"name": "NewOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/new-order/new-order.context-port.ts"
					},
					{
						"name": "SelectOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/select-order.context-port.ts"
					},
					{
						"name": "SetsStateOrderContextPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/order/sets-state-order.context-port.ts"
					},
					{
						"name": "GetAllClientDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts"
					},
					{
						"name": "GetAllEmployeeDtoPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which member to use?",
				"type": "multi-option",
				"options": {
					"OrderState": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						},
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						},
						{
							"name": "loadEmployees()",
							"callPath": [
								"loadEmployees"
							]
						}
					],
					"GetAllDtoPort": [],
					"ClientContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"EmployeeContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"NewOrderContextPort": [
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						}
					],
					"SelectOrderContextPort": [],
					"SetsStateOrderContextPort": [
						{
							"name": "setState()",
							"callPath": [
								"setState"
							]
						}
					],
					"GetAllClientDtoPort": [],
					"GetAllEmployeeDtoPort": []
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/tap",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/call-expressions/tap/flow"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "srtkGtIDAK",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-resolver/create: {
	"action": "angular-resolver/create",
	"params": {
		"name": "load-all-employees",
		"entityId": "resolver"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "srtkGtIDAK",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-resolver/create"
}
[info] [CLI] Calling Command angular-resolver/create: {
	"funcParams": {
		"name": "load-all-employees",
		"entityId": "resolver"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-resolver/create"
}
[info] [CommandBus]: Dispatching command RESOLVER_CREATE_RESOLVER: {
	"commandName": "RESOLVER_CREATE_RESOLVER",
	"payload": {
		"name": "load-all-employees",
		"suffix": "Resolver",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command RESOLVER_CREATE_RESOLVER"
}
[info] [EventBus]: Broadcasting event RESOLVER_CREATED: {
	"type": "RESOLVER_CREATED",
	"payload": {
		"resolverFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event RESOLVER_CREATED"
}
[info] [EventBus]: Broadcasted RESOLVER_CREATED: {
	"event": {
		"resolverFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted RESOLVER_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts",
		"entityType": "ANGULAR_RESOLVER"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_MODULE"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts",
		"entityType": "ANGULAR_RESOLVER"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_MODULE"
}
[info] [CommandBus]: Handled  RESOLVER_CREATE_RESOLVER: {
	"commandName": "RESOLVER_CREATE_RESOLVER",
	"payload": {
		"name": "load-all-employees",
		"suffix": "Resolver",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  RESOLVER_CREATE_RESOLVER"
}
[info] [CLI] Called Command angular-resolver/create: {
	"message": "[CLI] Called Command angular-resolver/create",
	"level": "info"
}
[info] [API] Response ok: angular-resolver/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-resolver/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts",
		"position": 358
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "B-L8sj9341",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts",
		"position": 358
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "LoadAllEmployeesResolver",
			"parentMethod": "resolve"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "LoadAllEmployeesResolver",
			"parentMethod": "resolve"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "B-L8sj9341",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "B-L8sj9341",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-employees.resolver.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/client-list.query.ts",
		"position": 108
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "WiQc7vKh3o",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/client-list.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "uaehd9OvVq",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/client-list.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/client-list.query.ts",
		"position": 108
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "ClientListQuery"
		},
		"children": []
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "ClientListQuery"
		},
		"children": []
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "new-order",
		"properties": {},
		"entityId": "query"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "uaehd9OvVq",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/client-list.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "new-order",
		"properties": {},
		"entityId": "query"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query",
		"name": "new-order",
		"suffix": "Query",
		"properties": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query",
		"name": "new-order",
		"suffix": "Query",
		"properties": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/new-order.query.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "07b779FLgP",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/new-order.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "gets-current-elemnts-new-order",
		"entityId": "queryPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "07b779FLgP",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/new-order.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "gets-current-elemnts-new-order",
		"entityId": "queryPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query",
		"name": "gets-current-elemnts-new-order",
		"suffix": "QueryPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query",
		"name": "gets-current-elemnts-new-order",
		"suffix": "QueryPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elemnts-new-order.query-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
		"position": 270
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "t8zoClvFmi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
		"position": 270
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[error] [API]: Error Entity not found for suffix: port: {
	"loggerData": {
		"action": "entity/actions",
		"params": {
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
			"position": 270
		},
		"context": {
			"workspace": {
				"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
			},
			"userContext": {
				"id": "6vwwznbuA4",
				"correlationId": "t8zoClvFmi",
				"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
				"logEnvId": "development"
			}
		}
	},
	"error": {},
	"stack": "Error: Entity not found for suffix: port\n    at getEntityActions (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:6597:15)\n    at async callQueryCli (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:8540:20)\n    at async callHandler (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:16691:27)",
	"level": "error",
	"message": "[API]: Error Entity not found for suffix: port"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
		"position": 270
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "ED_jW-QQxN",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
		"position": 270
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[error] [API]: Error Entity not found for suffix: port: {
	"loggerData": {
		"action": "entity/actions",
		"params": {
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
			"position": 270
		},
		"context": {
			"workspace": {
				"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
			},
			"userContext": {
				"id": "6vwwznbuA4",
				"correlationId": "ED_jW-QQxN",
				"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
				"logEnvId": "development"
			}
		}
	},
	"error": {},
	"stack": "Error: Entity not found for suffix: port\n    at getEntityActions (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:6597:15)\n    at async callQueryCli (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:8540:20)\n    at async callHandler (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:16691:27)",
	"level": "error",
	"message": "[API]: Error Entity not found for suffix: port"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts",
		"position": 381
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "CJnDxO-xcz",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts",
		"position": 381
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
		"position": 273
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "BfHAi91vpB",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
		"position": 273
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[error] [API]: Error Entity not found for suffix: port: {
	"loggerData": {
		"action": "entity/actions",
		"params": {
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
			"position": 273
		},
		"context": {
			"workspace": {
				"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
			},
			"userContext": {
				"id": "6vwwznbuA4",
				"correlationId": "BfHAi91vpB",
				"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order-query.port.ts",
				"logEnvId": "development"
			}
		}
	},
	"error": {},
	"stack": "Error: Entity not found for suffix: port\n    at getEntityActions (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:6597:15)\n    at async callQueryCli (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:8540:20)\n    at async callHandler (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:16691:27)",
	"level": "error",
	"message": "[API]: Error Entity not found for suffix: port"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order.query-port.ts",
		"position": 273
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "auzFwyYVJP",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order.query-port.ts",
		"position": 273
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "auzFwyYVJP",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ActivitiesQuery>"
					},
					{
						"name": "Observable<ActivitiesQuery[]>"
					},
					{
						"name": "Observable<ClientListQuery>"
					},
					{
						"name": "Observable<ClientListQuery[]>"
					},
					{
						"name": "Observable<ClientQuery>"
					},
					{
						"name": "Observable<ClientQuery[]>"
					},
					{
						"name": "Observable<EmployeeQuery>"
					},
					{
						"name": "Observable<EmployeeQuery[]>"
					},
					{
						"name": "Observable<NewOrderQuery>"
					},
					{
						"name": "Observable<NewOrderQuery[]>"
					},
					{
						"name": "Observable<OrderListQuery>"
					},
					{
						"name": "Observable<OrderListQuery[]>"
					},
					{
						"name": "Observable<OrderQuery>"
					},
					{
						"name": "Observable<OrderQuery[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ActivitiesQuery>"
					},
					{
						"name": "Observable<ActivitiesQuery[]>"
					},
					{
						"name": "Observable<ClientListQuery>"
					},
					{
						"name": "Observable<ClientListQuery[]>"
					},
					{
						"name": "Observable<ClientQuery>"
					},
					{
						"name": "Observable<ClientQuery[]>"
					},
					{
						"name": "Observable<EmployeeQuery>"
					},
					{
						"name": "Observable<EmployeeQuery[]>"
					},
					{
						"name": "Observable<NewOrderQuery>"
					},
					{
						"name": "Observable<NewOrderQuery[]>"
					},
					{
						"name": "Observable<OrderListQuery>"
					},
					{
						"name": "Observable<OrderListQuery[]>"
					},
					{
						"name": "Observable<OrderQuery>"
					},
					{
						"name": "Observable<OrderQuery[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "getElements",
		"params": {},
		"returnType": "Observable<NewOrderQuery>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "auzFwyYVJP",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "getElements",
		"params": {},
		"returnType": "Observable<NewOrderQuery>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order.query-port.ts",
		"name": "getElements",
		"params": {},
		"returnType": "Observable<NewOrderQuery>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order.query-port.ts",
		"name": "getElements",
		"params": {},
		"returnType": "Observable<NewOrderQuery>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order.query-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3792
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "YyYQs2S1vu",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3792
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "YyYQs2S1vu",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order.query-port.ts",
			"name": "GetsCurrentElementsNewOrderQueryPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-elements-new-order.query-port.ts",
			"name": "GetsCurrentElementsNewOrderQueryPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "ayeG6Gbf-3",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/new-order.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Fj0C-z8qGq",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/new-order.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "gets-new-order-currency-elements",
		"entityId": "queryPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "ayeG6Gbf-3",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/new-order.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "gets-new-order-currency-elements",
		"entityId": "queryPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query",
		"name": "gets-new-order-currency-elements",
		"suffix": "QueryPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query",
		"name": "gets-new-order-currency-elements",
		"suffix": "QueryPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
		"position": 274
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "cDcLNQTV0x",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
		"position": 274
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "cDcLNQTV0x",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ActivitiesQuery>"
					},
					{
						"name": "Observable<ActivitiesQuery[]>"
					},
					{
						"name": "Observable<ClientListQuery>"
					},
					{
						"name": "Observable<ClientListQuery[]>"
					},
					{
						"name": "Observable<ClientQuery>"
					},
					{
						"name": "Observable<ClientQuery[]>"
					},
					{
						"name": "Observable<EmployeeQuery>"
					},
					{
						"name": "Observable<EmployeeQuery[]>"
					},
					{
						"name": "Observable<NewOrderQuery>"
					},
					{
						"name": "Observable<NewOrderQuery[]>"
					},
					{
						"name": "Observable<OrderListQuery>"
					},
					{
						"name": "Observable<OrderListQuery[]>"
					},
					{
						"name": "Observable<OrderQuery>"
					},
					{
						"name": "Observable<OrderQuery[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<ActivitiesQuery>"
					},
					{
						"name": "Observable<ActivitiesQuery[]>"
					},
					{
						"name": "Observable<ClientListQuery>"
					},
					{
						"name": "Observable<ClientListQuery[]>"
					},
					{
						"name": "Observable<ClientQuery>"
					},
					{
						"name": "Observable<ClientQuery[]>"
					},
					{
						"name": "Observable<EmployeeQuery>"
					},
					{
						"name": "Observable<EmployeeQuery[]>"
					},
					{
						"name": "Observable<NewOrderQuery>"
					},
					{
						"name": "Observable<NewOrderQuery[]>"
					},
					{
						"name": "Observable<OrderListQuery>"
					},
					{
						"name": "Observable<OrderListQuery[]>"
					},
					{
						"name": "Observable<OrderQuery>"
					},
					{
						"name": "Observable<OrderQuery[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "getNewOrderCurrencyElements",
		"params": {},
		"returnType": "Observable<NewOrderQuery>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "cDcLNQTV0x",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "getNewOrderCurrencyElements",
		"params": {},
		"returnType": "Observable<NewOrderQuery>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
		"name": "getNewOrderCurrencyElements",
		"params": {},
		"returnType": "Observable<NewOrderQuery>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
		"name": "getNewOrderCurrencyElements",
		"params": {},
		"returnType": "Observable<NewOrderQuery>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3787
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "q0EMMAFUSk",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3787
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "loadEmployees"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "loadEmployees"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "q0EMMAFUSk",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
			"name": "GetsNewOrderCurrencyElementsQueryPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
			"name": "GetsNewOrderCurrencyElementsQueryPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "q0EMMAFUSk",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 4042
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "cthNmQVVoo",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 4042
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "getNewOrderCurrencyElements"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "getNewOrderCurrencyElements"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "getCurrentClientList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentClientList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentClientList"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "cthNmQVVoo",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "cthNmQVVoo",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 2030
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "j25VIRmet4",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 2030
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "client$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"client$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"client$"
								]
							}
						]
					},
					{
						"label": "filteredClient",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"filteredClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"filteredClient"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "ngOnInit()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"ngOnInit"
								]
							}
						]
					},
					{
						"label": "getOptionText()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getOptionText"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getOptionText"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getOptionText"
								]
							}
						]
					},
					{
						"label": "_filter()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"_filter"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"_filter"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"_filter"
								]
							}
						]
					},
					{
						"label": "getPosts()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getPosts"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getPosts"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getPosts"
								]
							}
						]
					},
					{
						"label": "onOrderSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onOrderSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onOrderSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onOrderSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "client$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"client$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"client$"
								]
							}
						]
					},
					{
						"label": "filteredClient",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"filteredClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"filteredClient"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "ngOnInit()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"ngOnInit"
								]
							}
						]
					},
					{
						"label": "getOptionText()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getOptionText"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getOptionText"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getOptionText"
								]
							}
						]
					},
					{
						"label": "_filter()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"_filter"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"_filter"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"_filter"
								]
							}
						]
					},
					{
						"label": "getPosts()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getPosts"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getPosts"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getPosts"
								]
							}
						]
					},
					{
						"label": "onOrderSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onOrderSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onOrderSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onOrderSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 2030
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "X12mvq3HZq",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 2030
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "client$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"client$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"client$"
								]
							}
						]
					},
					{
						"label": "filteredClient",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"filteredClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"filteredClient"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "ngOnInit()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"ngOnInit"
								]
							}
						]
					},
					{
						"label": "getOptionText()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getOptionText"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getOptionText"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getOptionText"
								]
							}
						]
					},
					{
						"label": "_filter()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"_filter"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"_filter"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"_filter"
								]
							}
						]
					},
					{
						"label": "getPosts()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getPosts"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getPosts"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getPosts"
								]
							}
						]
					},
					{
						"label": "onOrderSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onOrderSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onOrderSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onOrderSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "client$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"client$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"client$"
								]
							}
						]
					},
					{
						"label": "filteredClient",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"filteredClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"filteredClient"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "ngOnInit()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"ngOnInit"
								]
							}
						]
					},
					{
						"label": "getOptionText()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getOptionText"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getOptionText"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getOptionText"
								]
							}
						]
					},
					{
						"label": "_filter()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"_filter"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"_filter"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"_filter"
								]
							}
						]
					},
					{
						"label": "getPosts()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getPosts"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getPosts"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getPosts"
								]
							}
						]
					},
					{
						"label": "onOrderSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onOrderSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onOrderSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onOrderSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/properties/data/flow: {
	"action": "rxjs/properties/data/flow",
	"params": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "X12mvq3HZq",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/properties/data/flow"
}
[info] [CLI] Calling Query rxjs/properties/data/flow: {
	"funcParams": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/properties/data/flow"
}
[info] [CLI] Called Query rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input"
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "NewOrderComponent",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
					},
					{
						"name": "GetsCurrentClientListQueryPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts"
					},
					{
						"name": "GetsCurrentOrderListQueryPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts"
					},
					{
						"name": "GetsNewOrderCurrencyElementsQueryPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts"
					},
					{
						"name": "LoadClientsCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
					},
					{
						"name": "LoadEmployeesCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts"
					},
					{
						"name": "LoadOrdersCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"NewOrderComponent": [
						{
							"name": "client$",
							"callPath": [
								"client$"
							]
						},
						{
							"name": "filteredClient",
							"callPath": [
								"filteredClient"
							]
						}
					],
					"GetsCurrentClientListQueryPort": [
						{
							"name": "getCurrentClientList()",
							"callPath": [
								"getCurrentClientList"
							]
						}
					],
					"GetsCurrentOrderListQueryPort": [
						{
							"name": "getCurrentOrderList()",
							"callPath": [
								"getCurrentOrderList"
							]
						}
					],
					"GetsNewOrderCurrencyElementsQueryPort": [
						{
							"name": "getNewOrderCurrencyElements()",
							"callPath": [
								"getNewOrderCurrencyElements"
							]
						}
					],
					"LoadClientsCommandPort": [
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						}
					],
					"LoadEmployeesCommandPort": [
						{
							"name": "loadEmployees()",
							"callPath": [
								"loadEmployees"
							]
						}
					],
					"LoadOrdersCommandPort": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/properties/data/flow"
}
[info] [API] Response ok: rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input"
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "NewOrderComponent",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
					},
					{
						"name": "GetsCurrentClientListQueryPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts"
					},
					{
						"name": "GetsCurrentOrderListQueryPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts"
					},
					{
						"name": "GetsNewOrderCurrencyElementsQueryPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts"
					},
					{
						"name": "LoadClientsCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
					},
					{
						"name": "LoadEmployeesCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts"
					},
					{
						"name": "LoadOrdersCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"NewOrderComponent": [
						{
							"name": "client$",
							"callPath": [
								"client$"
							]
						},
						{
							"name": "filteredClient",
							"callPath": [
								"filteredClient"
							]
						}
					],
					"GetsCurrentClientListQueryPort": [
						{
							"name": "getCurrentClientList()",
							"callPath": [
								"getCurrentClientList"
							]
						}
					],
					"GetsCurrentOrderListQueryPort": [
						{
							"name": "getCurrentOrderList()",
							"callPath": [
								"getCurrentOrderList"
							]
						}
					],
					"GetsNewOrderCurrencyElementsQueryPort": [
						{
							"name": "getNewOrderCurrencyElements()",
							"callPath": [
								"getNewOrderCurrencyElements"
							]
						}
					],
					"LoadClientsCommandPort": [
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						}
					],
					"LoadEmployeesCommandPort": [
						{
							"name": "loadEmployees()",
							"callPath": [
								"loadEmployees"
							]
						}
					],
					"LoadOrdersCommandPort": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/properties/data/flow"
}
[info] [API] Request for rxjs/properties/data/create: {
	"action": "rxjs/properties/data/create",
	"params": {
		"propertyName": "elements",
		"dependencyCallPath": [
			"getNewOrderCurrencyElements"
		],
		"dependencyName": "GetsNewOrderCurrencyElementsQueryPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "X12mvq3HZq",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/properties/data/create"
}
[info] [API] Response ok: rxjs/properties/data/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/properties/data/create"
}
[info] [CLI] Calling Command rxjs/properties/data/create: {
	"funcParams": {
		"propertyName": "elements",
		"dependencyCallPath": [
			"getNewOrderCurrencyElements"
		],
		"dependencyName": "GetsNewOrderCurrencyElementsQueryPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/properties/data/create"
}
[info] [CommandBus]: Dispatching command CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"entityPropertyName": "elements",
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
		"dependencyName": "GetsNewOrderCurrencyElementsQueryPort",
		"dependencyCallPath": [
			"getNewOrderCurrencyElements"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CreateDataPropertyCommand"
}
[info] [CLI] Called Command rxjs/properties/data/create: {
	"message": "[CLI] Called Command rxjs/properties/data/create",
	"level": "info"
}
[info] [CommandBus]: Handled  CreateDataPropertyCommand: {
	"commandName": "CreateDataPropertyCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"entityPropertyName": "elements",
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
		"dependencyName": "GetsNewOrderCurrencyElementsQueryPort",
		"dependencyCallPath": [
			"getNewOrderCurrencyElements"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CreateDataPropertyCommand"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 6863
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "4T6a74JNmT",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 6863
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for angular-component/properties/list: {
	"action": "angular-component/properties/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "4T6a74JNmT",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/properties/list"
}
[info] [API] Response ok: angular-component/properties/list: {
	"result": [
		{
			"label": "order",
			"templateType": "forms",
			"typeProperties": []
		},
		{
			"label": "myControl",
			"templateType": "forms",
			"typeProperties": []
		},
		{
			"label": "elements$",
			"templateType": "details",
			"typeProperties": []
		},
		{
			"label": "client$",
			"templateType": "details",
			"typeProperties": []
		},
		{
			"label": "filteredClient",
			"templateType": "lists",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/properties/list"
}
[info] [CLI] Calling Query angular-component/properties/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/properties/list"
}
[info] [CLI] Called Query angular-component/properties/list: {
	"result": [
		{
			"label": "order",
			"templateType": "forms",
			"typeProperties": []
		},
		{
			"label": "myControl",
			"templateType": "forms",
			"typeProperties": []
		},
		{
			"label": "elements$",
			"templateType": "details",
			"typeProperties": []
		},
		{
			"label": "client$",
			"templateType": "details",
			"typeProperties": []
		},
		{
			"label": "filteredClient",
			"templateType": "lists",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/properties/list"
}
[info] [API] Request for angular-component/templates/get: {
	"action": "angular-component/templates/get",
	"params": {
		"name": "details"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "4T6a74JNmT",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/get"
}
[info] [API] Response ok: angular-component/templates/get: {
	"result": [
		{
			"label": "content",
			"contextVariables": []
		},
		{
			"label": "text",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/get"
}
[info] [CLI] Calling Query angular-component/templates/get: {
	"funcParams": {
		"name": "details"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/get"
}
[info] [CLI] Called Query angular-component/templates/get: {
	"result": [
		{
			"label": "content",
			"contextVariables": []
		},
		{
			"label": "text",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/get"
}
[info] [API] Request for angular-component/templates/add-detail: {
	"action": "angular-component/templates/add-detail",
	"params": {
		"componentHtmlFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 6863,
		"propertyName": "elements$",
		"detailTemplate": "content"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "4T6a74JNmT",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/add-detail"
}
[info] [CLI] Calling Command angular-component/templates/add-detail: {
	"funcParams": {
		"componentHtmlFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"position": 6863,
		"propertyName": "elements$",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-detail"
}
[info] [CommandBus]: Dispatching command AddDetailToTemplateCommand: {
	"commandName": "AddDetailToTemplateCommand",
	"payload": {
		"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"componentHtml": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"className": "NewOrderComponent",
		"propertyName": "elements$",
		"position": 6863,
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddDetailToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddDetailToTemplateCommand: {
	"commandName": "AddDetailToTemplateCommand",
	"payload": {
		"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"componentHtml": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
		"className": "NewOrderComponent",
		"propertyName": "elements$",
		"position": 6863,
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddDetailToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-detail: {
	"message": "[CLI] Called Command angular-component/templates/add-detail",
	"level": "info"
}
[info] [API] Response ok: angular-component/templates/add-detail: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/add-detail"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Ml0i0cx6cK",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "ActivitiesTemplate",
		"properties": {
			"id": "number",
			"name": "string"
		},
		"entityId": "dto"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Ml0i0cx6cK",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "ActivitiesTemplate",
		"properties": {
			"id": "number",
			"name": "string"
		},
		"entityId": "dto"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "ActivitiesTemplate",
		"suffix": "Dto",
		"properties": {
			"id": "number",
			"name": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "ActivitiesTemplate",
		"suffix": "Dto",
		"properties": {
			"id": "number",
			"name": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activities-template.dto.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "F6nZKk3nbS",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "Activities",
		"properties": {
			"id": "number",
			"name": "string",
			"done": "boolean"
		},
		"entityId": "dto"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "F6nZKk3nbS",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "Activities",
		"properties": {
			"id": "number",
			"name": "string",
			"done": "boolean"
		},
		"entityId": "dto"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activities",
		"name": "Activities",
		"suffix": "Dto",
		"properties": {
			"id": "number",
			"name": "string",
			"done": "boolean"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activities",
		"name": "Activities",
		"suffix": "Dto",
		"properties": {
			"id": "number",
			"name": "string",
			"done": "boolean"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activities/activities.dto.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "L8O9rrL1Qi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "load-activities-template",
		"entityId": "commandPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "L8O9rrL1Qi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "load-activities-template",
		"entityId": "commandPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "load-activities-template",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "load-activities-template",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/load-activities-template.command-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 4319
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "3IkscMBeQl",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 4319
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "getNewOrderCurrencyElements"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "getNewOrderCurrencyElements"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activities/activities.dto.ts",
		"position": 137
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "5gD3qyMAPO",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activities/activities.dto.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activities/activities.dto.ts",
		"position": 137
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": []
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": []
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "BClrGkctor",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activities/activities.dto.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "get-all-activities-template",
		"entityId": "dtoPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "BClrGkctor",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activities/activities.dto.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "get-all-activities-template",
		"entityId": "dtoPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "get-all-activities-template",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "get-all-activities-template",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all-activities-template.dto-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 4319
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "HinZ75Akt5",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 4319
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "getNewOrderCurrencyElements"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "getNewOrderCurrencyElements"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "HinZ75Akt5",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
			"name": "GetAllActivitiesTemplateDtoPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
			"name": "GetAllActivitiesTemplateDtoPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "HinZ75Akt5",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 4253
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "vvF10mScCy",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 4253
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "getNewOrderCurrencyElements"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState",
			"parentMethod": "getNewOrderCurrencyElements"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "vvF10mScCy",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "vvF10mScCy",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Arr5lnvu0e",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "http-activities-template",
		"entityId": "service"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Arr5lnvu0e",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "http-activities-template",
		"entityId": "service"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
		"name": "http-activities-template",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
		"name": "http-activities-template",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"position": 106
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "7cxXvcWK2p",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"position": 106
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "7cxXvcWK2p",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "7cxXvcWK2p",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"position": 210
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "aqvxOsB6Sn",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"position": 210
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "aqvxOsB6Sn",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts",
			"name": "GetAllDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
			"name": "GetAllActivitiesTemplateDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"name": "GetAllEmployeeDtoPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts",
			"name": "GetAllDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
			"name": "GetAllActivitiesTemplateDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"name": "GetAllEmployeeDtoPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "aqvxOsB6Sn",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"position": 616
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "XcH4UlJsJW",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"position": 616
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "XcH4UlJsJW",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "HttpActivitiesTemplateService",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"HttpActivitiesTemplateService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "HttpActivitiesTemplateService",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"HttpActivitiesTemplateService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"get"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "XcH4UlJsJW",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"get"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-activities-template.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "kIrTeElafm",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/client.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "S-Zz51UoDr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-resolver/create: {
	"action": "angular-resolver/create",
	"params": {
		"name": "load-activities-template",
		"entityId": "resolver"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "S-Zz51UoDr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-resolver/create"
}
[info] [CLI] Calling Command angular-resolver/create: {
	"funcParams": {
		"name": "load-activities-template",
		"entityId": "resolver"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-resolver/create"
}
[info] [CommandBus]: Dispatching command RESOLVER_CREATE_RESOLVER: {
	"commandName": "RESOLVER_CREATE_RESOLVER",
	"payload": {
		"name": "load-activities-template",
		"suffix": "Resolver",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command RESOLVER_CREATE_RESOLVER"
}
[info] [EventBus]: Broadcasting event RESOLVER_CREATED: {
	"type": "RESOLVER_CREATED",
	"payload": {
		"resolverFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event RESOLVER_CREATED"
}
[info] [EventBus]: Broadcasted RESOLVER_CREATED: {
	"event": {
		"resolverFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted RESOLVER_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"entityType": "ANGULAR_RESOLVER"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_MODULE"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-activities-template.resolver-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-activities-template.resolver-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-activities-template.resolver-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-activities-template.resolver-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"entityType": "ANGULAR_RESOLVER"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_MODULE"
}
[info] [CommandBus]: Handled  RESOLVER_CREATE_RESOLVER: {
	"commandName": "RESOLVER_CREATE_RESOLVER",
	"payload": {
		"name": "load-activities-template",
		"suffix": "Resolver",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  RESOLVER_CREATE_RESOLVER"
}
[info] [CLI] Called Command angular-resolver/create: {
	"message": "[CLI] Called Command angular-resolver/create",
	"level": "info"
}
[info] [API] Response ok: angular-resolver/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-resolver/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"position": 357
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "i1vwisMiuG",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"position": 357
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "LoadAllActivitiesTemplateResolver",
			"parentMethod": "resolve"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "LoadAllActivitiesTemplateResolver",
			"parentMethod": "resolve"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "i1vwisMiuG",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "i1vwisMiuG",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "HsBK_kPhqM",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-resolver/create: {
	"action": "angular-resolver/create",
	"params": {
		"name": "load-all-activities-template",
		"entityId": "resolver"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "HsBK_kPhqM",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-resolver/create"
}
[info] [CLI] Calling Command angular-resolver/create: {
	"funcParams": {
		"name": "load-all-activities-template",
		"entityId": "resolver"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-resolver/create"
}
[info] [CommandBus]: Dispatching command RESOLVER_CREATE_RESOLVER: {
	"commandName": "RESOLVER_CREATE_RESOLVER",
	"payload": {
		"name": "load-all-activities-template",
		"suffix": "Resolver",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command RESOLVER_CREATE_RESOLVER"
}
[info] [EventBus]: Broadcasting event RESOLVER_CREATED: {
	"type": "RESOLVER_CREATED",
	"payload": {
		"resolverFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event RESOLVER_CREATED"
}
[info] [EventBus]: Broadcasted RESOLVER_CREATED: {
	"event": {
		"resolverFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted RESOLVER_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"entityType": "ANGULAR_RESOLVER"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_MODULE"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"entityType": "ANGULAR_RESOLVER"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_MODULE"
}
[info] [CommandBus]: Handled  RESOLVER_CREATE_RESOLVER: {
	"commandName": "RESOLVER_CREATE_RESOLVER",
	"payload": {
		"name": "load-all-activities-template",
		"suffix": "Resolver",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  RESOLVER_CREATE_RESOLVER"
}
[info] [CLI] Called Command angular-resolver/create: {
	"message": "[CLI] Called Command angular-resolver/create",
	"level": "info"
}
[info] [API] Response ok: angular-resolver/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-resolver/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"position": 360
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "F9ILyjZi3t",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"position": 360
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "F9ILyjZi3t",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "F9ILyjZi3t",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-activities-template.resolver.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "g1OS72vwNY",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "activities-template",
		"properties": {
			"id": "number",
			"name": "string"
		},
		"entityId": "query"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "g1OS72vwNY",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "activities-template",
		"properties": {
			"id": "number",
			"name": "string"
		},
		"entityId": "query"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/activities-template",
		"name": "activities-template",
		"suffix": "Query",
		"properties": {
			"id": "number",
			"name": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/activities-template",
		"name": "activities-template",
		"suffix": "Query",
		"properties": {
			"id": "number",
			"name": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/activities-template/activities-template.query.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "_fE54nRXe_",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/order.dto.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "D48xqKD0tK",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "addOrder",
		"entityId": "dtoPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "_fE54nRXe_",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/order.dto.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "addOrder",
		"entityId": "dtoPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "addOrder",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "addOrder",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "QsYVvSR2FL",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "create-order",
		"properties": {},
		"entityId": "command"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "QsYVvSR2FL",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "create-order",
		"properties": {},
		"entityId": "command"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "create-order",
		"suffix": "Command",
		"properties": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "create-order",
		"suffix": "Command",
		"properties": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/create-order.command.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "M3WLYQlvLU",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "create-order",
		"entityId": "commandPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "M3WLYQlvLU",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "create-order",
		"entityId": "commandPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "create-order",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "create-order",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/create-order.command-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 3215
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "zMxy_Wh52J",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"position": 3215
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent",
			"parentMethod": "ngOnInit"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "elements$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"elements$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"elements$"
								]
							}
						]
					},
					{
						"label": "filteredClient",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"filteredClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"filteredClient"
								]
							}
						]
					},
					{
						"label": "filteredEmployee",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"filteredEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"filteredEmployee"
								]
							}
						]
					},
					{
						"label": "filteredActivitiesTemplate",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"filteredActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"filteredActivitiesTemplate"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "ngOnInit()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"ngOnInit"
								]
							}
						]
					},
					{
						"label": "getOptionClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getOptionClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getOptionClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getOptionClient"
								]
							}
						]
					},
					{
						"label": "getOptionEmployee()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getOptionEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getOptionEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getOptionEmployee"
								]
							}
						]
					},
					{
						"label": "getOptionActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getOptionActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getOptionActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getOptionActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "_filterClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"_filterClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"_filterClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"_filterClient"
								]
							}
						]
					},
					{
						"label": "_filterEmployee()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"_filterEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"_filterEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"_filterEmployee"
								]
							}
						]
					},
					{
						"label": "_filterActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"_filterActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"_filterActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"_filterActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "getClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getClient"
								]
							}
						]
					},
					{
						"label": "onOrderSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onOrderSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onOrderSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onOrderSubmitted"
								]
							}
						]
					},
					{
						"label": "addEmployee()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"addEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"addEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"addEmployee"
								]
							}
						]
					},
					{
						"label": "getEmployee()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getEmployee"
								]
							}
						]
					},
					{
						"label": "getActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "addActivities()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"addActivities"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"addActivities"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"addActivities"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "NewOrderComponent",
			"parentMethod": "ngOnInit"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "elements$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"elements$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"elements$"
								]
							}
						]
					},
					{
						"label": "filteredClient",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"filteredClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"filteredClient"
								]
							}
						]
					},
					{
						"label": "filteredEmployee",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"filteredEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"filteredEmployee"
								]
							}
						]
					},
					{
						"label": "filteredActivitiesTemplate",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"filteredActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"filteredActivitiesTemplate"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "ngOnInit()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"ngOnInit"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"ngOnInit"
								]
							}
						]
					},
					{
						"label": "getOptionClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getOptionClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getOptionClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getOptionClient"
								]
							}
						]
					},
					{
						"label": "getOptionEmployee()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getOptionEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getOptionEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getOptionEmployee"
								]
							}
						]
					},
					{
						"label": "getOptionActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getOptionActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getOptionActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getOptionActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "_filterClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"_filterClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"_filterClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"_filterClient"
								]
							}
						]
					},
					{
						"label": "_filterEmployee()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"_filterEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"_filterEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"_filterEmployee"
								]
							}
						]
					},
					{
						"label": "_filterActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"_filterActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"_filterActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"_filterActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "getClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getClient"
								]
							}
						]
					},
					{
						"label": "onOrderSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onOrderSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onOrderSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onOrderSubmitted"
								]
							}
						]
					},
					{
						"label": "addEmployee()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"addEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"addEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"addEmployee"
								]
							}
						]
					},
					{
						"label": "getEmployee()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getEmployee"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getEmployee"
								]
							}
						]
					},
					{
						"label": "getActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "addActivities()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"addActivities"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"addActivities"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"addActivities"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "zMxy_Wh52J",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts",
			"name": "GetsCurrentOrderListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"name": "CreateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts",
			"name": "GetsCurrentOrderListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"name": "CreateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "zMxy_Wh52J",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/new-order/new-order.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2457
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "vOE_v-cZ8V",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2457
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "vOE_v-cZ8V",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts",
			"name": "AddOrderDtoPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts",
			"name": "AddOrderDtoPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "vOE_v-cZ8V",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2503
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "HVFJpNjLIW",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 2503
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3611
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "M58PomMQl5",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 3611
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "M58PomMQl5",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"name": "CreateOrderCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"name": "CreateOrderCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "M58PomMQl5",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"position": 1556
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "lFv1GF-Y-J",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"position": 1556
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"position": 1556
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "fmSAyXFLTT",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"position": 1556
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "fmSAyXFLTT",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"position": 1556
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Zuh-arXEX6",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"position": 1556
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Zuh-arXEX6",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts",
			"name": "AddOrderDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
			"name": "GetAllActivitiesTemplateDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"name": "GetAllEmployeeDtoPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts",
			"name": "AddOrderDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
			"name": "GetAllActivitiesTemplateDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"name": "GetAllEmployeeDtoPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Zuh-arXEX6",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"position": 1650
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "RRdiCujqwM",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"position": 1650
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderService",
			"parentMethod": "add"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "add()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"add"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderService",
			"parentMethod": "add"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "add()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"add"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/call-expressions/tap/flow: {
	"action": "rxjs/call-expressions/tap/flow",
	"params": {
		"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
		"label": "Statement Side Effect",
		"callPath": [
			"getAll"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "RRdiCujqwM",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/call-expressions/tap/flow"
}
[info] [CLI] Calling Query rxjs/call-expressions/tap/flow: {
	"funcParams": {
		"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
		"label": "Statement Side Effect",
		"callPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/call-expressions/tap/flow"
}
[info] [CLI] Called Query rxjs/call-expressions/tap/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderService",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which member to use?",
				"type": "multi-option",
				"options": {
					"OrderService": [
						{
							"name": "add()",
							"callPath": [
								"add"
							]
						}
					],
					"HttpClient": []
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/tap",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/call-expressions/tap/flow"
}
[info] [API] Response ok: rxjs/call-expressions/tap/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderService",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which member to use?",
				"type": "multi-option",
				"options": {
					"OrderService": [
						{
							"name": "add()",
							"callPath": [
								"add"
							]
						}
					],
					"HttpClient": []
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/tap",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/call-expressions/tap/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
		"position": 3218
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "4gpCh7H2Vi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
		"position": 3218
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "QXY-iW4HIN",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
		"position": 3218
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "feyDHw8wgg",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
		"position": 3218
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "U0dR2NHJoR",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
		"position": 3218
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
		"position": 3218
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderListComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
		"position": 3218
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderListComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
		"position": 3218
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderListComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderListComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderListComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderListComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderListComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderListComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for angular-component/properties/list: {
	"action": "angular-component/properties/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "4gpCh7H2Vi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/properties/list"
}
[info] [API] Response ok: angular-component/properties/list: {
	"result": [
		{
			"label": "orders$",
			"templateType": "details",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/properties/list"
}
[info] [CLI] Calling Query angular-component/properties/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/properties/list"
}
[info] [CLI] Called Query angular-component/properties/list: {
	"result": [
		{
			"label": "orders$",
			"templateType": "details",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/properties/list"
}
[info] [API] Request for angular-component/templates/get: {
	"action": "angular-component/templates/get",
	"params": {
		"name": "details"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "4gpCh7H2Vi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/get"
}
[info] [API] Response ok: angular-component/templates/get: {
	"result": [
		{
			"label": "content",
			"contextVariables": []
		},
		{
			"label": "text",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/get"
}
[info] [CLI] Calling Query angular-component/templates/get: {
	"funcParams": {
		"name": "details"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/get"
}
[info] [CLI] Called Query angular-component/templates/get: {
	"result": [
		{
			"label": "content",
			"contextVariables": []
		},
		{
			"label": "text",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/get"
}
[info] [API] Request for angular-component/templates/add-detail: {
	"action": "angular-component/templates/add-detail",
	"params": {
		"componentHtmlFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
		"position": 3218,
		"propertyName": "orders$",
		"detailTemplate": "content"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "4gpCh7H2Vi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/add-detail"
}
[info] [CLI] Calling Command angular-component/templates/add-detail: {
	"funcParams": {
		"componentHtmlFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
		"position": 3218,
		"propertyName": "orders$",
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-detail"
}
[info] [CommandBus]: Dispatching command AddDetailToTemplateCommand: {
	"commandName": "AddDetailToTemplateCommand",
	"payload": {
		"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
		"componentHtml": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
		"className": "OrderListComponent",
		"propertyName": "orders$",
		"position": 3218,
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddDetailToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddDetailToTemplateCommand: {
	"commandName": "AddDetailToTemplateCommand",
	"payload": {
		"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
		"componentTs": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
		"componentHtml": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
		"className": "OrderListComponent",
		"propertyName": "orders$",
		"position": 3218,
		"detailTemplate": "content"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddDetailToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-detail: {
	"message": "[CLI] Called Command angular-component/templates/add-detail",
	"level": "info"
}
[info] [API] Response ok: angular-component/templates/add-detail: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/add-detail"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "LkQG4OZyoq",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/newOrderElements.mapper.ts",
		"position": 1197
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "eeY3OnOSug",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/newOrderElements.mapper.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/newOrderElements.mapper.ts",
		"position": 1197
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[error] [API]: Error Entity not found for suffix: mapper: {
	"loggerData": {
		"action": "entity/actions",
		"params": {
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/newOrderElements.mapper.ts",
			"position": 1197
		},
		"context": {
			"workspace": {
				"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
			},
			"userContext": {
				"id": "6vwwznbuA4",
				"correlationId": "eeY3OnOSug",
				"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/newOrderElements.mapper.ts",
				"logEnvId": "development"
			}
		}
	},
	"error": {},
	"stack": "Error: Entity not found for suffix: mapper\n    at getEntityActions (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:6597:15)\n    at async callQueryCli (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:8540:20)\n    at async callHandler (C:\\Users\\Adam\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:16691:27)",
	"level": "error",
	"message": "[API]: Error Entity not found for suffix: mapper"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "4Gwmx_xfzr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/newOrderElements.mapper.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Y44wsZthyW",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/newOrderElements.mapper.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "partsTemplate",
		"properties": {
			"name": "string",
			"price": "number"
		},
		"entityId": "dto"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Y44wsZthyW",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/newOrderElements.mapper.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "partsTemplate",
		"properties": {
			"name": "string",
			"price": "number"
		},
		"entityId": "dto"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template",
		"name": "partsTemplate",
		"suffix": "Dto",
		"properties": {
			"name": "string",
			"price": "number"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template",
		"name": "partsTemplate",
		"suffix": "Dto",
		"properties": {
			"name": "string",
			"price": "number"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/parts-template.dto.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "uwPeSBdX6t",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "get-all-parts-template",
		"entityId": "dtoPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "uwPeSBdX6t",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "get-all-parts-template",
		"entityId": "dtoPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "get-all-parts-template",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "get-all-parts-template",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all-parts-template.dto-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all-parts-template.dto-port.ts",
		"position": 0
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "WXZ_OD8mIz",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all-parts-template.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all-parts-template.dto-port.ts",
		"position": 0
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "WXZ_OD8mIz",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all-parts-template.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<OrderDto>"
					},
					{
						"name": "Observable<OrderDto[]>"
					},
					{
						"name": "Observable<ActivitiesDto>"
					},
					{
						"name": "Observable<ActivitiesDto[]>"
					},
					{
						"name": "Observable<ActivitiesTemplateDto>"
					},
					{
						"name": "Observable<ActivitiesTemplateDto[]>"
					},
					{
						"name": "Observable<ClientDto>"
					},
					{
						"name": "Observable<ClientDto[]>"
					},
					{
						"name": "Observable<EmployeeDto>"
					},
					{
						"name": "Observable<EmployeeDto[]>"
					},
					{
						"name": "Observable<PartsTemplateDto>"
					},
					{
						"name": "Observable<PartsTemplateDto[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<OrderDto>"
					},
					{
						"name": "Observable<OrderDto[]>"
					},
					{
						"name": "Observable<ActivitiesDto>"
					},
					{
						"name": "Observable<ActivitiesDto[]>"
					},
					{
						"name": "Observable<ActivitiesTemplateDto>"
					},
					{
						"name": "Observable<ActivitiesTemplateDto[]>"
					},
					{
						"name": "Observable<ClientDto>"
					},
					{
						"name": "Observable<ClientDto[]>"
					},
					{
						"name": "Observable<EmployeeDto>"
					},
					{
						"name": "Observable<EmployeeDto[]>"
					},
					{
						"name": "Observable<PartsTemplateDto>"
					},
					{
						"name": "Observable<PartsTemplateDto[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "getAll",
		"params": {},
		"returnType": "Observable<PartsTemplateDto[]>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "WXZ_OD8mIz",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all-parts-template.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "getAll",
		"params": {},
		"returnType": "Observable<PartsTemplateDto[]>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all-parts-template.dto-port.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<PartsTemplateDto[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all-parts-template.dto-port.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<PartsTemplateDto[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all-parts-template.dto-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Ale7NkifOt",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "load-parts-activities",
		"entityId": "commandPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "Ale7NkifOt",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "load-parts-activities",
		"entityId": "commandPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "load-parts-activities",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "load-parts-activities",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/load-parts-activities.command-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
		"position": 242
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "wm68jvAjzi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
		"position": 242
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "wm68jvAjzi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<LoadClientsCommand>"
					},
					{
						"name": "Observable<LoadClientsCommand[]>"
					},
					{
						"name": "Observable<CreateOrderCommand>"
					},
					{
						"name": "Observable<CreateOrderCommand[]>"
					},
					{
						"name": "Observable<LoadOrdersCommand>"
					},
					{
						"name": "Observable<LoadOrdersCommand[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<LoadClientsCommand>"
					},
					{
						"name": "Observable<LoadClientsCommand[]>"
					},
					{
						"name": "Observable<CreateOrderCommand>"
					},
					{
						"name": "Observable<CreateOrderCommand[]>"
					},
					{
						"name": "Observable<LoadOrdersCommand>"
					},
					{
						"name": "Observable<LoadOrdersCommand[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "loadAll",
		"params": {},
		"returnType": "Observable<LoadClientsCommand[]>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "wm68jvAjzi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "loadAll",
		"params": {},
		"returnType": "Observable<LoadClientsCommand[]>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
		"name": "loadAll",
		"params": {},
		"returnType": "Observable<LoadClientsCommand[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
		"name": "loadAll",
		"params": {},
		"returnType": "Observable<LoadClientsCommand[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 5247
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "on7QMoZRMi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 5250
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "9dyScuoeT2",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 5247
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 5250
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "createOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"createOrder"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "createOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"createOrder"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "createOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"createOrder"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "createOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"createOrder"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "on7QMoZRMi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts",
			"name": "GetAllPartsTemplateDtoPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts",
			"name": "GetAllPartsTemplateDtoPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "on7QMoZRMi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 5501
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "WuX_6Wv_j1",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 5501
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "createOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"createOrder"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "createOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"createOrder"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "WuX_6Wv_j1",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
			"name": "LoadPartsActivitiesCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
			"name": "LoadPartsActivitiesCommandPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "WuX_6Wv_j1",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "K1mrX7nETk",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/activitiesTemplate",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-resolver/create: {
	"action": "angular-resolver/create",
	"params": {
		"name": "load-all-parts-template",
		"entityId": "resolver"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "K1mrX7nETk",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/activitiesTemplate",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-resolver/create"
}
[info] [CLI] Calling Command angular-resolver/create: {
	"funcParams": {
		"name": "load-all-parts-template",
		"entityId": "resolver"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-resolver/create"
}
[info] [CommandBus]: Dispatching command RESOLVER_CREATE_RESOLVER: {
	"commandName": "RESOLVER_CREATE_RESOLVER",
	"payload": {
		"name": "load-all-parts-template",
		"suffix": "Resolver",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command RESOLVER_CREATE_RESOLVER"
}
[info] [EventBus]: Broadcasting event RESOLVER_CREATED: {
	"type": "RESOLVER_CREATED",
	"payload": {
		"resolverFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event RESOLVER_CREATED"
}
[info] [EventBus]: Broadcasted RESOLVER_CREATED: {
	"event": {
		"resolverFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted RESOLVER_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
		"entityType": "ANGULAR_RESOLVER"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_MODULE"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
		"entityType": "ANGULAR_RESOLVER"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_MODULE"
}
[info] [CommandBus]: Handled  RESOLVER_CREATE_RESOLVER: {
	"commandName": "RESOLVER_CREATE_RESOLVER",
	"payload": {
		"name": "load-all-parts-template",
		"suffix": "Resolver",
		"absoluteFolderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  RESOLVER_CREATE_RESOLVER"
}
[info] [CLI] Called Command angular-resolver/create: {
	"message": "[CLI] Called Command angular-resolver/create",
	"level": "info"
}
[info] [API] Response ok: angular-resolver/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-resolver/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
		"position": 355
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "LM57sLP7ZA",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
		"position": 355
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "LoadAllPartsTemplateResolver",
			"parentMethod": "resolve"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "LoadAllPartsTemplateResolver",
			"parentMethod": "resolve"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"resolve"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/call-expressions/tap/flow: {
	"action": "rxjs/call-expressions/tap/flow",
	"params": {
		"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
		"label": "Statement Side Effect",
		"callPath": [
			"resolve"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "LM57sLP7ZA",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/call-expressions/tap/flow"
}
[info] [CLI] Calling Query rxjs/call-expressions/tap/flow: {
	"funcParams": {
		"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
		"label": "Statement Side Effect",
		"callPath": [
			"resolve"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/call-expressions/tap/flow"
}
[info] [CLI] Called Query rxjs/call-expressions/tap/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"resolve"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "LoadAllPartsTemplateResolver",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts"
					},
					{
						"name": "LoadActivitiesTemplateCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
					},
					{
						"name": "LoadClientsCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
					},
					{
						"name": "LoadEmployeesCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts"
					},
					{
						"name": "CreateOrderCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
					},
					{
						"name": "LoadOrdersCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts"
					},
					{
						"name": "LoadPartsActivitiesCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which member to use?",
				"type": "multi-option",
				"options": {
					"LoadAllPartsTemplateResolver": [
						{
							"name": "resolve()",
							"callPath": [
								"resolve"
							]
						}
					],
					"LoadActivitiesTemplateCommandPort": [
						{
							"name": "loadActivitiesTemplate()",
							"callPath": [
								"loadActivitiesTemplate"
							]
						}
					],
					"LoadClientsCommandPort": [
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						}
					],
					"LoadEmployeesCommandPort": [
						{
							"name": "loadEmployees()",
							"callPath": [
								"loadEmployees"
							]
						}
					],
					"CreateOrderCommandPort": [
						{
							"name": "createOrder()",
							"callPath": [
								"createOrder"
							]
						}
					],
					"LoadOrdersCommandPort": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						}
					],
					"LoadPartsActivitiesCommandPort": [
						{
							"name": "loadPartsTemplate()",
							"callPath": [
								"loadPartsTemplate"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/tap",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/call-expressions/tap/flow"
}
[info] [API] Response ok: rxjs/call-expressions/tap/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"resolve"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "LoadAllPartsTemplateResolver",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts"
					},
					{
						"name": "LoadActivitiesTemplateCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
					},
					{
						"name": "LoadClientsCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
					},
					{
						"name": "LoadEmployeesCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts"
					},
					{
						"name": "CreateOrderCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
					},
					{
						"name": "LoadOrdersCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts"
					},
					{
						"name": "LoadPartsActivitiesCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-activities.command-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which member to use?",
				"type": "multi-option",
				"options": {
					"LoadAllPartsTemplateResolver": [
						{
							"name": "resolve()",
							"callPath": [
								"resolve"
							]
						}
					],
					"LoadActivitiesTemplateCommandPort": [
						{
							"name": "loadActivitiesTemplate()",
							"callPath": [
								"loadActivitiesTemplate"
							]
						}
					],
					"LoadClientsCommandPort": [
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						}
					],
					"LoadEmployeesCommandPort": [
						{
							"name": "loadEmployees()",
							"callPath": [
								"loadEmployees"
							]
						}
					],
					"CreateOrderCommandPort": [
						{
							"name": "createOrder()",
							"callPath": [
								"createOrder"
							]
						}
					],
					"LoadOrdersCommandPort": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						}
					],
					"LoadPartsActivitiesCommandPort": [
						{
							"name": "loadPartsTemplate()",
							"callPath": [
								"loadPartsTemplate"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/tap",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/call-expressions/tap/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
		"position": 348
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "3Utl-_Iyr0",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
		"position": 348
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "LoadAllPartsTemplateResolver"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "LoadAllPartsTemplateResolver"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "resolve()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"resolve"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Resolver to Route",
				"actionId": "ADD_ROUTE_RESOLVER",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"resolve"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "3Utl-_Iyr0",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"resolve"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"resolve"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "LoadAllPartsTemplateResolver",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts"
					},
					{
						"name": "LoadActivitiesTemplateCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
					},
					{
						"name": "LoadClientsCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
					},
					{
						"name": "LoadEmployeesCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts"
					},
					{
						"name": "CreateOrderCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
					},
					{
						"name": "LoadOrdersCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts"
					},
					{
						"name": "LoadPartsTemplateCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"LoadAllPartsTemplateResolver": [
						{
							"name": "resolve()",
							"callPath": [
								"resolve"
							]
						}
					],
					"LoadActivitiesTemplateCommandPort": [
						{
							"name": "loadActivitiesTemplate()",
							"callPath": [
								"loadActivitiesTemplate"
							]
						}
					],
					"LoadClientsCommandPort": [
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						}
					],
					"LoadEmployeesCommandPort": [
						{
							"name": "loadEmployees()",
							"callPath": [
								"loadEmployees"
							]
						}
					],
					"CreateOrderCommandPort": [
						{
							"name": "createOrder()",
							"callPath": [
								"createOrder"
							]
						}
					],
					"LoadOrdersCommandPort": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						}
					],
					"LoadPartsTemplateCommandPort": [
						{
							"name": "loadPartsTemplate()",
							"callPath": [
								"loadPartsTemplate"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"resolve"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "LoadAllPartsTemplateResolver",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts"
					},
					{
						"name": "LoadActivitiesTemplateCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts"
					},
					{
						"name": "LoadClientsCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts"
					},
					{
						"name": "LoadEmployeesCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts"
					},
					{
						"name": "CreateOrderCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
					},
					{
						"name": "LoadOrdersCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts"
					},
					{
						"name": "LoadPartsTemplateCommandPort",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"LoadAllPartsTemplateResolver": [
						{
							"name": "resolve()",
							"callPath": [
								"resolve"
							]
						}
					],
					"LoadActivitiesTemplateCommandPort": [
						{
							"name": "loadActivitiesTemplate()",
							"callPath": [
								"loadActivitiesTemplate"
							]
						}
					],
					"LoadClientsCommandPort": [
						{
							"name": "loadClient()",
							"callPath": [
								"loadClient"
							]
						}
					],
					"LoadEmployeesCommandPort": [
						{
							"name": "loadEmployees()",
							"callPath": [
								"loadEmployees"
							]
						}
					],
					"CreateOrderCommandPort": [
						{
							"name": "createOrder()",
							"callPath": [
								"createOrder"
							]
						}
					],
					"LoadOrdersCommandPort": [
						{
							"name": "loadOrder()",
							"callPath": [
								"loadOrder"
							]
						}
					],
					"LoadPartsTemplateCommandPort": [
						{
							"name": "loadPartsTemplate()",
							"callPath": [
								"loadPartsTemplate"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"resolve"
		],
		"dependencyCallPath": [
			"loadPartsTemplate"
		],
		"dependencyType": "LoadPartsTemplateCommandPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "3Utl-_Iyr0",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"resolve"
		],
		"dependencyCallPath": [
			"loadPartsTemplate"
		],
		"dependencyType": "LoadPartsTemplateCommandPort",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
		"callPath": [
			"resolve"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts",
		"dependencyType": "LoadPartsTemplateCommandPort",
		"dependencyCallPath": [
			"loadPartsTemplate"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts",
		"callPath": [
			"resolve"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts",
		"dependencyType": "LoadPartsTemplateCommandPort",
		"dependencyCallPath": [
			"loadPartsTemplate"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/resolvers/load-all-parts-template.resolver.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "ndfTG4w6Wi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/pages/new-order/new-order.page-module.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "Frontend-BSc-Thesis",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"rootRoutingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "Frontend-BSc-Thesis",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"rootRoutingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "uS2YBbk8P5",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/newOrderElements.mapper.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "http-parts-template",
		"entityId": "service"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "uS2YBbk8P5",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/mappers/newOrderElements.mapper.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "http-parts-template",
		"entityId": "service"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
		"name": "http-parts-template",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services",
		"name": "http-parts-template",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
		"position": 101
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "q0wT7KLBAg",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
		"position": 101
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "q0wT7KLBAg",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts",
			"name": "AddOrderDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts",
			"name": "GetAllDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
			"name": "GetAllActivitiesTemplateDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"name": "GetAllEmployeeDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts",
			"name": "GetAllPartsTemplateDtoPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/add-order.dto-port.ts",
			"name": "AddOrderDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/get-all.dto-port.ts",
			"name": "GetAllDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
			"name": "GetAllActivitiesTemplateDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"name": "GetAllEmployeeDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts",
			"name": "GetAllPartsTemplateDtoPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "q0wT7KLBAg",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
		"position": 458
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "GzXlq52iBy",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
		"position": 458
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "HttpPartsTemplateService",
			"parentMethod": "getAll"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "HttpPartsTemplateService",
			"parentMethod": "getAll"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "GzXlq52iBy",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "HttpPartsTemplateService",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"HttpPartsTemplateService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "HttpPartsTemplateService",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"HttpPartsTemplateService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"get"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "GzXlq52iBy",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"get"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/http-parts-template.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/new-order.query.ts",
		"position": 468
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "4UNHlU_qna",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/new-order.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/new-order.query.ts",
		"position": 468
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": []
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": []
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "VfPwnMTHeH",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/activities.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "PartsTemplate",
		"properties": {
			"name": "string",
			"price": "number"
		},
		"entityId": "query"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "VfPwnMTHeH",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/activities.query.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "PartsTemplate",
		"properties": {
			"name": "string",
			"price": "number"
		},
		"entityId": "query"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/parts-template",
		"name": "PartsTemplate",
		"suffix": "Query",
		"properties": {
			"name": "string",
			"price": "number"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/parts-template",
		"name": "PartsTemplate",
		"suffix": "Query",
		"properties": {
			"name": "string",
			"price": "number"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/parts-template/parts-template.query.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "9wqiCzD3uu",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "VJjjSmJF0R",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "delete",
		"entityId": "dtoPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "9wqiCzD3uu",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "delete",
		"entityId": "dtoPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "delete",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "delete",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete.dto-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "4yZ0GgGt5D",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "delete-order",
		"entityId": "dtoPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "4yZ0GgGt5D",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "delete-order",
		"entityId": "dtoPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "delete-order",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto",
		"name": "delete-order",
		"suffix": "DtoPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
		"position": 191
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "YrANGymoT6",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
		"position": 191
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "YrANGymoT6",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<OrderDto>"
					},
					{
						"name": "Observable<OrderDto[]>"
					},
					{
						"name": "Observable<ActivitiesDto>"
					},
					{
						"name": "Observable<ActivitiesDto[]>"
					},
					{
						"name": "Observable<ActivitiesTemplateDto>"
					},
					{
						"name": "Observable<ActivitiesTemplateDto[]>"
					},
					{
						"name": "Observable<ClientDto>"
					},
					{
						"name": "Observable<ClientDto[]>"
					},
					{
						"name": "Observable<EmployeeDto>"
					},
					{
						"name": "Observable<EmployeeDto[]>"
					},
					{
						"name": "Observable<PartsTemplateDto>"
					},
					{
						"name": "Observable<PartsTemplateDto[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<OrderDto>"
					},
					{
						"name": "Observable<OrderDto[]>"
					},
					{
						"name": "Observable<ActivitiesDto>"
					},
					{
						"name": "Observable<ActivitiesDto[]>"
					},
					{
						"name": "Observable<ActivitiesTemplateDto>"
					},
					{
						"name": "Observable<ActivitiesTemplateDto[]>"
					},
					{
						"name": "Observable<ClientDto>"
					},
					{
						"name": "Observable<ClientDto[]>"
					},
					{
						"name": "Observable<EmployeeDto>"
					},
					{
						"name": "Observable<EmployeeDto[]>"
					},
					{
						"name": "Observable<PartsTemplateDto>"
					},
					{
						"name": "Observable<PartsTemplateDto[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "delete",
		"params": {
			"id": "number"
		},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "YrANGymoT6",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "delete",
		"params": {
			"id": "number"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
		"name": "delete",
		"params": {
			"id": "number"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
		"name": "delete",
		"params": {
			"id": "number"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "TmCZZ2XD3A",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "RAnD3n--AV",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "delete-order",
		"properties": {
			"idOrder": "number"
		},
		"entityId": "command"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "RAnD3n--AV",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "delete-order",
		"properties": {
			"idOrder": "number"
		},
		"entityId": "command"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "delete-order",
		"suffix": "Command",
		"properties": {
			"idOrder": "number"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "delete-order",
		"suffix": "Command",
		"properties": {
			"idOrder": "number"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "JXI3Y29v5n",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "deleteOrder",
		"entityId": "commandPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "JXI3Y29v5n",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "deleteOrder",
		"entityId": "commandPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "deleteOrder",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "deleteOrder",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
		"position": 0
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "sXc6BDdu_Q",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
		"position": 0
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "sXc6BDdu_Q",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<DeleteOrderCommand>"
					},
					{
						"name": "Observable<DeleteOrderCommand[]>"
					},
					{
						"name": "Observable<LoadClientsCommand>"
					},
					{
						"name": "Observable<LoadClientsCommand[]>"
					},
					{
						"name": "Observable<CreateOrderCommand>"
					},
					{
						"name": "Observable<CreateOrderCommand[]>"
					},
					{
						"name": "Observable<LoadOrdersCommand>"
					},
					{
						"name": "Observable<LoadOrdersCommand[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<DeleteOrderCommand>"
					},
					{
						"name": "Observable<DeleteOrderCommand[]>"
					},
					{
						"name": "Observable<LoadClientsCommand>"
					},
					{
						"name": "Observable<LoadClientsCommand[]>"
					},
					{
						"name": "Observable<CreateOrderCommand>"
					},
					{
						"name": "Observable<CreateOrderCommand[]>"
					},
					{
						"name": "Observable<LoadOrdersCommand>"
					},
					{
						"name": "Observable<LoadOrdersCommand[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "deleteOrder",
		"params": {
			"command": "DeleteOrderCommand"
		},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "sXc6BDdu_Q",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "deleteOrder",
		"params": {
			"command": "DeleteOrderCommand"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
		"name": "deleteOrder",
		"params": {
			"command": "DeleteOrderCommand"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
		"name": "deleteOrder",
		"params": {
			"command": "DeleteOrderCommand"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"position": 1745
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "SbxVqO6A1N",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"position": 1745
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "add()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"add"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"add"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"add"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "add()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"add"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"add"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"add"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "SbxVqO6A1N",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
			"name": "DeleteOrderDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
			"name": "GetAllActivitiesTemplateDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"name": "GetAllEmployeeDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts",
			"name": "GetAllPartsTemplateDtoPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
			"name": "DeleteOrderDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/activitiesTemplate/get-all-activities-template.dto-port.ts",
			"name": "GetAllActivitiesTemplateDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/client/get-all-client.dto-port.ts",
			"name": "GetAllClientDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/employee/get-all-employee.dto-port.ts",
			"name": "GetAllEmployeeDtoPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/parts-template/get-all-parts-template.dto-port.ts",
			"name": "GetAllPartsTemplateDtoPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "SbxVqO6A1N",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"position": 1904
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "CszqS46gvZ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"position": 1904
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderService"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "add()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"add"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"add"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"add"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderService"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "add()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"add"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"add"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"add"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"delete"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "CszqS46gvZ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"delete"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"delete"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderService",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"OrderService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "add()",
							"callPath": [
								"add"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"delete"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "OrderService",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"OrderService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "add()",
							"callPath": [
								"add"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"delete"
		],
		"dependencyCallPath": [
			"delete"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "CszqS46gvZ",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"delete"
		],
		"dependencyCallPath": [
			"delete"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"callPath": [
			"delete"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"delete"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts",
		"callPath": [
			"delete"
		],
		"dependencyFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"delete"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/services/order.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 5981
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "CMH-MmaQGb",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 5981
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "createOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"createOrder"
								]
							}
						]
					},
					{
						"label": "loadPartsTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadPartsTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadPartsTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadPartsTemplate"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "createOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"createOrder"
								]
							}
						]
					},
					{
						"label": "loadPartsTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadPartsTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadPartsTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadPartsTemplate"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "CMH-MmaQGb",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
			"name": "DeleteOrderCommandPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
			"name": "DeleteOrderCommandPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 5981
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "p7RUs2MIcr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 5981
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "createOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"createOrder"
								]
							}
						]
					},
					{
						"label": "loadPartsTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadPartsTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadPartsTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadPartsTemplate"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderState"
		},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "createOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"createOrder"
								]
							}
						]
					},
					{
						"label": "loadPartsTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadPartsTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadPartsTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadPartsTemplate"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "p7RUs2MIcr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
			"name": "DeleteOrderDtoPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts",
			"name": "DeleteOrderDtoPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/context/employee/employee.context-port.ts",
			"name": "EmployeeContextPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "p7RUs2MIcr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/secondary/dto/delete-order.dto-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 6103
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "sjCxH_M05M",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"position": 6103
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "createOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"createOrder"
								]
							}
						]
					},
					{
						"label": "loadPartsTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadPartsTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadPartsTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadPartsTemplate"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Implement",
				"actionId": "IMPLEMENT",
				"callPath": []
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "loadOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadOrder"
								]
							}
						]
					},
					{
						"label": "getCurrentOrderList()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getCurrentOrderList"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getCurrentOrderList"
								]
							}
						]
					},
					{
						"label": "loadClient()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadClient"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadClient"
								]
							}
						]
					},
					{
						"label": "loadEmployees()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadEmployees"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadEmployees"
								]
							}
						]
					},
					{
						"label": "getNewOrderCurrencyElements()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getNewOrderCurrencyElements"
								]
							}
						]
					},
					{
						"label": "loadActivitiesTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadActivitiesTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadActivitiesTemplate"
								]
							}
						]
					},
					{
						"label": "createOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"createOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"createOrder"
								]
							}
						]
					},
					{
						"label": "loadPartsTemplate()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"loadPartsTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"loadPartsTemplate"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"loadPartsTemplate"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for implementable/list: {
	"action": "implementable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "sjCxH_M05M",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/list"
}
[info] [CLI] Calling Query implementable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query implementable/list"
}
[info] [CLI] Called Query implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
			"name": "DeleteOrderCommandPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query implementable/list"
}
[info] [API] Response ok: implementable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
			"name": "DeleteOrderCommandPort",
			"type": "ABSTRACTION"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION"
		}
	],
	"level": "info",
	"message": "[API] Response ok: implementable/list"
}
[info] [API] Request for implementable/implement: {
	"action": "implementable/implement",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
		"type": "ABSTRACTION"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "sjCxH_M05M",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for implementable/implement"
}
[info] [CLI] Calling Command implementable/implement: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
		"type": "ABSTRACTION"
	},
	"level": "info",
	"message": "[CLI] Calling Command implementable/implement"
}
[info] [CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command IMPLEMENT_ABSTRACTION"
}
[info] [EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED: {
	"type": "ABSTRACTION_IMPLMENTED",
	"payload": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_PROVIDE_TOKEN"
}
[info] [EventBus]: Broadcasted ABSTRACTION_IMPLMENTED: {
	"event": {
		"abstractionPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
		"entityPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted ABSTRACTION_IMPLMENTED"
}
[info] [CommandBus]: Handled  MODULE_PROVIDE_TOKEN: {
	"commandName": "MODULE_PROVIDE_TOKEN",
	"payload": {
		"portFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
		"implementingClassFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_PROVIDE_TOKEN"
}
[info] [CommandBus]: Handled  IMPLEMENT_ABSTRACTION: {
	"commandName": "IMPLEMENT_ABSTRACTION",
	"payload": {
		"entityFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
		"abstractionFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  IMPLEMENT_ABSTRACTION"
}
[info] [CLI] Called Command implementable/implement: {
	"message": "[CLI] Called Command implementable/implement",
	"level": "info"
}
[info] [API] Response ok: implementable/implement: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts"
	},
	"level": "info",
	"message": "[API] Response ok: implementable/implement"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "XSgb0E8AVv",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-directive/create: {
	"action": "angular-directive/create",
	"params": {
		"name": "delete-order",
		"entityId": "directive"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "XSgb0E8AVv",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-directive/create"
}
[info] [CLI] Calling Command angular-directive/create: {
	"funcParams": {
		"name": "delete-order",
		"entityId": "directive"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-directive/create"
}
[info] [CommandBus]: Dispatching command DIRECTIVE_CREATE_SMART_DIRECTIVE: {
	"commandName": "DIRECTIVE_CREATE_SMART_DIRECTIVE",
	"payload": {
		"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
		"name": "delete-order",
		"libPrefix": "lib"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command DIRECTIVE_CREATE_SMART_DIRECTIVE"
}
[info] [EventBus]: Broadcasting event DIRECTIVE_SMART_DIRECTIVE_CREATED: {
	"type": "DIRECTIVE_SMART_DIRECTIVE_CREATED",
	"payload": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event DIRECTIVE_SMART_DIRECTIVE_CREATED"
}
[info] [EventBus]: Broadcasted DIRECTIVE_SMART_DIRECTIVE_CREATED: {
	"event": {
		"createdFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted DIRECTIVE_SMART_DIRECTIVE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"entityType": "ANGULAR_DIRECTIVE"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_MODULE"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"entityType": "ANGULAR_DIRECTIVE"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_MODULE"
}
[info] [CommandBus]: Handled  DIRECTIVE_CREATE_SMART_DIRECTIVE: {
	"commandName": "DIRECTIVE_CREATE_SMART_DIRECTIVE",
	"payload": {
		"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
		"name": "delete-order",
		"libPrefix": "lib"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  DIRECTIVE_CREATE_SMART_DIRECTIVE"
}
[info] [CLI] Called Command angular-directive/create: {
	"message": "[CLI] Called Command angular-directive/create",
	"level": "info"
}
[info] [API] Response ok: angular-directive/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-directive/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"position": 325
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "FMj6fBkH9H",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"position": 325
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "FMj6fBkH9H",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
			"name": "DeleteOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts",
			"name": "GetsCurrentOrderListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
			"name": "GetsNewOrderCurrencyElementsQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"name": "CreateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts",
			"name": "LoadPartsTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
			"name": "DeleteOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts",
			"name": "GetsCurrentOrderListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
			"name": "GetsNewOrderCurrencyElementsQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"name": "CreateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts",
			"name": "LoadPartsTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "FMj6fBkH9H",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"position": 306
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "FHViq4D0o2",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"position": 306
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "DeleteOrderDirective"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "DeleteOrderDirective"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"position": 306
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "D0Ml1X7OHR",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"position": 306
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "DeleteOrderDirective"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "DeleteOrderDirective"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "D0Ml1X7OHR",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
			"name": "DeleteOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts",
			"name": "GetsCurrentOrderListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
			"name": "GetsNewOrderCurrencyElementsQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"name": "CreateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts",
			"name": "LoadPartsTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts",
			"name": "DeleteOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts",
			"name": "GetsCurrentOrderListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
			"name": "GetsNewOrderCurrencyElementsQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"name": "CreateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts",
			"name": "LoadPartsTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "D0Ml1X7OHR",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/delete-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/delete-order.directive.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "dL0I5gFULq",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "iCxa9pZoyi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "duplicateOrder",
		"properties": {},
		"entityId": "command"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "iCxa9pZoyi",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/order.state.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "duplicateOrder",
		"properties": {},
		"entityId": "command"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "duplicateOrder",
		"suffix": "Command",
		"properties": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "duplicateOrder",
		"suffix": "Command",
		"properties": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "9CwpbbeI7w",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for abstraction/create: {
	"action": "abstraction/create",
	"params": {
		"name": "duplicate-order",
		"entityId": "commandPort"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "9CwpbbeI7w",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for abstraction/create"
}
[info] [CLI] Calling Command abstraction/create: {
	"funcParams": {
		"name": "duplicate-order",
		"entityId": "commandPort"
	},
	"level": "info",
	"message": "[CLI] Calling Command abstraction/create"
}
[info] [CommandBus]: Dispatching command CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "duplicate-order",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_ABSTRACTION"
}
[info] [CommandBus]: Handled  CREATE_ABSTRACTION: {
	"commandName": "CREATE_ABSTRACTION",
	"payload": {
		"folderPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command",
		"name": "duplicate-order",
		"suffix": "CommandPort"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_ABSTRACTION"
}
[info] [CLI] Called Command abstraction/create: {
	"message": "[CLI] Called Command abstraction/create",
	"level": "info"
}
[info] [API] Response ok: abstraction/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: abstraction/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "gTUsy4JPQ1",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts",
		"position": 0
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "BZMRHdLbnr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts",
		"position": 0
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "BZMRHdLbnr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<DuplicateOrderCommand>"
					},
					{
						"name": "Observable<DuplicateOrderCommand[]>"
					},
					{
						"name": "Observable<LoadClientsCommand>"
					},
					{
						"name": "Observable<LoadClientsCommand[]>"
					},
					{
						"name": "Observable<CreateOrderCommand>"
					},
					{
						"name": "Observable<CreateOrderCommand[]>"
					},
					{
						"name": "Observable<DeleteOrderCommand>"
					},
					{
						"name": "Observable<DeleteOrderCommand[]>"
					},
					{
						"name": "Observable<LoadOrdersCommand>"
					},
					{
						"name": "Observable<LoadOrdersCommand[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<DuplicateOrderCommand>"
					},
					{
						"name": "Observable<DuplicateOrderCommand[]>"
					},
					{
						"name": "Observable<LoadClientsCommand>"
					},
					{
						"name": "Observable<LoadClientsCommand[]>"
					},
					{
						"name": "Observable<CreateOrderCommand>"
					},
					{
						"name": "Observable<CreateOrderCommand[]>"
					},
					{
						"name": "Observable<DeleteOrderCommand>"
					},
					{
						"name": "Observable<DeleteOrderCommand[]>"
					},
					{
						"name": "Observable<LoadOrdersCommand>"
					},
					{
						"name": "Observable<LoadOrdersCommand[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "duplicateOrder",
		"params": {
			"command": "DuplicateOrderCommand"
		},
		"returnType": "Observable<DuplicateOrderCommand>"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "6vwwznbuA4",
			"correlationId": "BZMRHdLbnr",
			"clickedPath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "duplicateOrder",
		"params": {
			"command": "DuplicateOrderCommand"
		},
		"returnType": "Observable<DuplicateOrderCommand>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts",
		"name": "duplicateOrder",
		"params": {
			"command": "DuplicateOrderCommand"
		},
		"returnType": "Observable<DuplicateOrderCommand>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts",
		"name": "duplicateOrder",
		"params": {
			"command": "DuplicateOrderCommand"
		},
		"returnType": "Observable<DuplicateOrderCommand>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "kF4PDs9ghK",
			"correlationId": "N3V8TLEEns",
			"clickedPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "kF4PDs9ghK",
			"correlationId": "4IMbj7zKAx",
			"clickedPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "order",
				"workspaceRoot": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis",
				"root": "libs/order",
				"sourceRoot": "libs/order/src",
				"prefix": "lib",
				"path": {
					"publicApi": "index.ts",
					"alias": "@order"
				},
				"codePathFromWorkspaceRoot": "libs/order/src/lib",
				"absoluteCodePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib",
				"absoluteRootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order",
				"publicApiPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/index.ts",
				"alias": "@order",
				"type": "Lib"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "page",
							"suffix": "Page",
							"folder": "pages/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					],
					"Lib": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "adapters/primary/components/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "Lib",
							"config": {
								"stylesExtension": "scss",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dto",
							"suffix": "Dto",
							"folder": "application/ports/secondary/dto/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "dtoPort",
							"suffix": "DtoPort",
							"folder": "application/ports/secondary/dto",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "service",
							"suffix": "Service",
							"folder": "adapters/secondary/services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "adapters/secondary/services",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "context",
							"suffix": "Context",
							"folder": "application/ports/secondary/context/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "contextPort",
							"suffix": "ContextPort",
							"folder": "application/ports/secondary/context/$name$",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "storage",
							"suffix": "Storage",
							"folder": "adapters/secondary/storages",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "event",
							"suffix": "Event",
							"folder": "application/ports/secondary/event",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "eventPort",
							"suffix": "EventPort",
							"folder": "application/ports/secondary/event",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "eventDispatcher",
							"suffix": "EventDispatcher",
							"folder": "adapters/secondary/event-dispatchers",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "eventListener",
							"suffix": "EventListener",
							"folder": "adapters/primary/event-listeners",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "query",
							"suffix": "Query",
							"folder": "application/ports/primary/query/$name$",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "queryPort",
							"suffix": "QueryPort",
							"folder": "application/ports/primary/query",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "command",
							"suffix": "Command",
							"folder": "application/ports/primary/command",
							"type": "DATA_STRUCTURE",
							"insideOf": "Lib"
						},
						{
							"id": "commandPort",
							"suffix": "CommandPort",
							"folder": "application/ports/primary/command",
							"type": "ABSTRACTION",
							"insideOf": "Lib"
						},
						{
							"id": "state",
							"suffix": "State",
							"folder": "application",
							"type": "ANGULAR_SERVICE",
							"insideOf": "Lib"
						},
						{
							"id": "directive",
							"suffix": "Directive",
							"folder": "adapters/primary/directives",
							"type": "ANGULAR_DIRECTIVE",
							"insideOf": "Lib"
						},
						{
							"id": "resolver",
							"suffix": "Resolver",
							"folder": "adapters/primary/resolvers",
							"type": "ANGULAR_RESOLVER",
							"insideOf": "Lib"
						},
						{
							"id": "guard",
							"suffix": "Guard",
							"folder": "adapters/primary/guards",
							"type": "ANGULAR_GUARD",
							"insideOf": "Lib"
						},
						{
							"id": "library",
							"type": "LIBRARY"
						}
					]
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-directive/create: {
	"action": "angular-directive/create",
	"params": {
		"name": "duplicate-order",
		"entityId": "directive"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "kF4PDs9ghK",
			"correlationId": "4IMbj7zKAx",
			"clickedPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/secondary/storages",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-directive/create"
}
[info] [CLI] Calling Command angular-directive/create: {
	"funcParams": {
		"name": "duplicate-order",
		"entityId": "directive"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-directive/create"
}
[info] [CommandBus]: Dispatching command DIRECTIVE_CREATE_SMART_DIRECTIVE: {
	"commandName": "DIRECTIVE_CREATE_SMART_DIRECTIVE",
	"payload": {
		"rootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib",
		"name": "duplicate-order",
		"libPrefix": "lib"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command DIRECTIVE_CREATE_SMART_DIRECTIVE"
}
[info] [EventBus]: Broadcasting event DIRECTIVE_SMART_DIRECTIVE_CREATED: {
	"type": "DIRECTIVE_SMART_DIRECTIVE_CREATED",
	"payload": {
		"createdFile": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event DIRECTIVE_SMART_DIRECTIVE_CREATED"
}
[info] [EventBus]: Broadcasted DIRECTIVE_SMART_DIRECTIVE_CREATED: {
	"event": {
		"createdFile": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted DIRECTIVE_SMART_DIRECTIVE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts",
		"entityType": "ANGULAR_DIRECTIVE"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_MODULE"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API: {
	"commandName": "MODULE_UPDATE_PUBLIC_API",
	"payload": {
		"moduleFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive-module.ts",
		"publicApiPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/index.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_UPDATE_PUBLIC_API"
}
[info] [CommandBus]: Handled  MODULE_CREATE_MODULE: {
	"commandName": "MODULE_CREATE_MODULE",
	"payload": {
		"filePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts",
		"entityType": "ANGULAR_DIRECTIVE"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_MODULE"
}
[info] [CommandBus]: Handled  DIRECTIVE_CREATE_SMART_DIRECTIVE: {
	"commandName": "DIRECTIVE_CREATE_SMART_DIRECTIVE",
	"payload": {
		"rootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib",
		"name": "duplicate-order",
		"libPrefix": "lib"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  DIRECTIVE_CREATE_SMART_DIRECTIVE"
}
[info] [CLI] Called Command angular-directive/create: {
	"message": "[CLI] Called Command angular-directive/create",
	"level": "info"
}
[info] [API] Response ok: angular-directive/create: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-directive/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts",
		"position": 402
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "kF4PDs9ghK",
			"correlationId": "BL4xeoSY3R",
			"clickedPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts",
		"position": 402
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "kF4PDs9ghK",
			"correlationId": "BL4xeoSY3R",
			"clickedPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts",
			"name": "DuplicateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts",
			"name": "GetsCurrentOrderListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
			"name": "GetsNewOrderCurrencyElementsQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"name": "CreateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/delete-order.command-port.ts",
			"name": "DeleteOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts",
			"name": "LoadPartsTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts",
			"name": "DuplicateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-order-list.query-port.ts",
			"name": "GetsCurrentOrderListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
			"name": "GetsNewOrderCurrencyElementsQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"name": "CreateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/delete-order.command-port.ts",
			"name": "DeleteOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts",
			"name": "LoadPartsTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "kF4PDs9ghK",
			"correlationId": "BL4xeoSY3R",
			"clickedPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/directives/duplicate-order.directive.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
		"position": 1670
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "kF4PDs9ghK",
			"correlationId": "H-G_oWS8r9",
			"clickedPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
		"position": 1670
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderListComponent",
			"parentMethod": "newOrder"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "orders$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"orders$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"orders$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "newOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"newOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"newOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"newOrder"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "OrderListComponent",
			"parentMethod": "newOrder"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "orders$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"orders$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"orders$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "newOrder()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"newOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"newOrder"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"newOrder"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "kF4PDs9ghK",
			"correlationId": "H-G_oWS8r9",
			"clickedPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts",
			"name": "DuplicateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
			"name": "GetsNewOrderCurrencyElementsQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"name": "CreateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/delete-order.command-port.ts",
			"name": "DeleteOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts",
			"name": "LoadPartsTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/duplicate-order.command-port.ts",
			"name": "DuplicateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-current-client-list.query-port.ts",
			"name": "GetsCurrentClientListQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/query/gets-new-order-currency-elements.query-port.ts",
			"name": "GetsNewOrderCurrencyElementsQueryPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/activitiesTemplate/load-activities-template.command-port.ts",
			"name": "LoadActivitiesTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/client/load-clients.command-port.ts",
			"name": "LoadClientsCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/employee/load-employees.command-port.ts",
			"name": "LoadEmployeesCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts",
			"name": "CreateOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/delete-order.command-port.ts",
			"name": "DeleteOrderCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/load-orders.command-port.ts",
			"name": "LoadOrdersCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		},
		{
			"file": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/partsTemplate/load-parts-template.command-port.ts",
			"name": "LoadPartsTemplateCommandPort",
			"type": "ABSTRACTION",
			"dataType": "Internal"
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-abstraction: {
	"action": "injectable/inject-abstraction",
	"params": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis"
		},
		"userContext": {
			"id": "kF4PDs9ghK",
			"correlationId": "H-G_oWS8r9",
			"clickedPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-abstraction"
}
[info] [CLI] Calling Command injectable/inject-abstraction: {
	"funcParams": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
		"injectingPath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-abstraction"
}
[info] [CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY: {
	"commandName": "INJECT_ABSTRACTION_DEPENDENCY",
	"payload": {
		"entityFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts",
		"injectingFilePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/application/ports/primary/command/order/create-order.command-port.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_ABSTRACTION_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-abstraction: {
	"message": "[CLI] Called Command injectable/inject-abstraction",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-abstraction: {
	"result": {
		"filePath": "D:/Projekty/Engineering-Thesis-2022/Frontend-BSc-Thesis/libs/order/src/lib/adapters/primary/components/order-list/order-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-abstraction"
}
